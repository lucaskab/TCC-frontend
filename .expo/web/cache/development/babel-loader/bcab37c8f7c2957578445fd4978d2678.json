{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\tcc\\\\frontend\\\\src\\\\components\\\\Buscas.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { requestPermissionsAsync, getCurrentPositionAsync, geocodeAsync } from 'expo-location';\nimport api from \"../../services/api\";\nexport default function Busca() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentRegion = _useState2[0],\n      setCurrentRegion = _useState2[1];\n\n  function loadInitialPosition() {\n    var _await$getCurrentPosi, coords, latitude, longitude;\n\n    return _regeneratorRuntime.async(function loadInitialPosition$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getCurrentPositionAsync({\n              enableHighAccuracy: true\n            }));\n\n          case 2:\n            _await$getCurrentPosi = _context.sent;\n            coords = _await$getCurrentPosi.coords;\n            console.log(coords);\n            latitude = coords.latitude, longitude = coords.longitude;\n            setCurrentRegion({\n              latitude: latitude,\n              longitude: longitude,\n              latitudeDelta: 0.04,\n              longitudeDelta: 0.04\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    console.log(\"entrou\");\n    loadInitialPosition();\n  }, [currentRegion]);\n  return React.createElement(MapView, {\n    initialRegion: currentRegion,\n    style: styles.map,\n    region: currentRegion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, React.createElement(MapView.Marker, {\n    coordinate: {\n      latitude: currentRegion.latitude,\n      longitude: currentRegion.longitude\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Lucas/tcc/frontend/src/components/Buscas.js"],"names":["React","useState","useEffect","MapView","Marker","Callout","requestPermissionsAsync","getCurrentPositionAsync","geocodeAsync","api","Busca","currentRegion","setCurrentRegion","loadInitialPosition","enableHighAccuracy","coords","console","log","latitude","longitude","latitudeDelta","longitudeDelta","styles","map","StyleSheet","create","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;;;;AAGA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,OAA1B,QAAyC,mBAAzC;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,EAA2DC,YAA3D,QAA+E,eAA/E;AACA,OAAOC,GAAP;AAEA,eAAe,SAASC,KAAT,GAAkB;AAAA,kBACWT,QAAQ,CAAC,IAAD,CADnB;AAAA;AAAA,MACxBU,aADwB;AAAA,MACTC,gBADS;;AAG/B,WAAeC,mBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE6BN,uBAAuB,CAAC;AAC/CO,cAAAA,kBAAkB,EAAE;AAD2B,aAAD,CAFpD;;AAAA;AAAA;AAEYC,YAAAA,MAFZ,yBAEYA,MAFZ;AAKIC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACQG,YAAAA,QANZ,GAMoCH,MANpC,CAMYG,QANZ,EAMsBC,SANtB,GAMoCJ,MANpC,CAMsBI,SANtB;AAQIP,YAAAA,gBAAgB,CAAC;AACfM,cAAAA,QAAQ,EAARA,QADe;AAEfC,cAAAA,SAAS,EAATA,SAFe;AAGfC,cAAAA,aAAa,EAAE,IAHA;AAIfC,cAAAA,cAAc,EAAE;AAJD,aAAD,CAAhB;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BAnB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAJ,IAAAA,mBAAmB;AACtB,GAHU,EAGR,CAACF,aAAD,CAHQ,CAAT;AAME,SACE,oBAAC,OAAD;AAAW,IAAA,aAAa,EAAEA,aAA1B;AAAyC,IAAA,KAAK,EAAEW,MAAM,CAACC,GAAvD;AAA4D,IAAA,MAAM,EAAEZ,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,UAAU,EAAE;AAACO,MAAAA,QAAQ,EAAEP,aAAa,CAACO,QAAzB;AAAmCC,MAAAA,SAAS,EAAER,aAAa,CAACQ;AAA5D,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMH;AAED,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,GAAG,EAAE;AACHG,IAAAA,IAAI,EAAC;AADF;AAD0B,CAAlB,CAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { Text, View, StyleSheet} from 'react-native';\r\n\r\nimport MapView, { Marker, Callout } from 'react-native-maps';\r\nimport { requestPermissionsAsync, getCurrentPositionAsync, geocodeAsync } from 'expo-location';\r\nimport api from '../../services/api';\r\n\r\nexport default function Busca () {\r\n  const [currentRegion, setCurrentRegion] = useState(null);\r\n  \r\n  async function loadInitialPosition(){\r\n    \r\n      const { coords } = await getCurrentPositionAsync({\r\n        enableHighAccuracy: true,\r\n      });\r\n      console.log(coords);\r\n      const { latitude, longitude } = coords;\r\n\r\n      setCurrentRegion({\r\n        latitude,\r\n        longitude,\r\n        latitudeDelta: 0.04,\r\n        longitudeDelta: 0.04,\r\n      })\r\n    }  \r\n  \r\n\r\n /* async function loadAllProblems() {\r\n\r\n    const resposta = await api.get('/searchAllProblems')\r\n\r\n    setProblems(resposta.data)\r\n    \r\n  }*/\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"entrou\");\r\n    loadInitialPosition();\r\n}, [currentRegion]);\r\n\r\n\r\n    return (\r\n      <MapView   initialRegion={currentRegion} style={styles.map} region={currentRegion} >\r\n        <MapView.Marker coordinate={{latitude: currentRegion.latitude, longitude: currentRegion.longitude }} />\r\n      </MapView>\r\n    \r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  map: {\r\n    flex:1\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}