{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\tcc\\\\frontend\\\\src\\\\components\\\\EnviarProblema.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Actions } from 'react-native-router-flux';\nimport { Container, Header, View, DeckSwiper, Card, CardItem, Thumbnail, Text, Left, Body, Button, Input, Icon } from 'native-base';\nimport { connect } from 'react-redux';\nimport { getCurrentPositionAsync } from 'expo-location';\nimport { modificaDescricao, modificaSugestao } from \"../actions/ProblemaActions\";\nimport api from \"../../services/api\";\nimport * as Font from 'expo-font';\nimport StepIndicator from 'react-native-step-indicator';\nvar IndicatorStyles = {\n  stepIndicatorSize: 15,\n  currentStepIndicatorSize: 20,\n  separatorStrokeWidth: 2,\n  currentStepStrokeWidth: 3,\n  stepStrokeCurrentColor: '#8a2be2',\n  stepStrokeWidth: 3,\n  stepStrokeFinishedColor: '#8a2be2',\n  stepStrokeUnFinishedColor: '#dedede',\n  separatorFinishedColor: '#8a2be2',\n  separatorUnFinishedColor: '#dedede',\n  stepIndicatorFinishedColor: '#8a2be2',\n  stepIndicatorUnFinishedColor: '#ffffff',\n  stepIndicatorCurrentColor: '#ffffff'\n};\nexport var EnviarProblema = function EnviarProblema(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(\"Saude\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      escolha = _useState4[0],\n      setEscolha = _useState4[1];\n\n  var _useState5 = useState(\"Hospital Lotado\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nomeProblema = _useState6[0],\n      setNomeProblema = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentRegion = _useState8[0],\n      setCurrentRegion = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bolinhas = _useState10[0],\n      setBolinhas = _useState10[1];\n\n  function cadastrarProblems(email, nomeProblema, descricaoProblema, areaProblema, latitude, longitude, sugestao) {\n    var arrayDeURL, urlFoto, i, index, filename, form, headers, result;\n    return _regeneratorRuntime.async(function cadastrarProblems$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            arrayDeURL = [props.Foto1, props.Foto2, props.Foto3, props.Foto4, props.Foto5];\n            urlFoto = [];\n            i = 0;\n\n          case 3:\n            if (!(i < 5)) {\n              _context.next = 16;\n              break;\n            }\n\n            index = arrayDeURL[i].lastIndexOf(\"/\") + 1;\n            filename = arrayDeURL[i].substr(index);\n            form = new FormData();\n            form.append('file', {\n              name: filename,\n              uri: arrayDeURL[i],\n              type: 'image/jpeg'\n            });\n            headers = {\n              'Content-Type': 'multipart/form-data'\n            };\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(api.post('/pictureToServer', form, headers));\n\n          case 11:\n            result = _context.sent;\n            urlFoto[i] = result.data.url;\n\n          case 13:\n            i++;\n            _context.next = 3;\n            break;\n\n          case 16:\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(api.post('/problems', {\n              email: email,\n              nomeProblema: nomeProblema,\n              descricaoProblema: descricaoProblema,\n              urlFoto: urlFoto,\n              areaProblema: areaProblema,\n              latitude: latitude,\n              longitude: longitude,\n              sugestao: sugestao\n            }));\n\n          case 18:\n            Alert.alert(\"Problema\", \"Seu problema foi reportado com sucesso!!\");\n            Actions.navigation();\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    function loadInitialPosition() {\n      var retorno, _await$getCurrentPosi, coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadInitialPosition$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'adventpro-regular': require(\"../../assets/fonts/adventpro-regular.ttf\"),\n                'Roboto-Regular': require(\"../../assets/fonts/Roboto-Regular.ttf\"),\n                'Roboto_medium': require(\"../../assets/fonts/Roboto-Medium.ttf\")\n              }));\n\n            case 2:\n              retorno = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 5:\n              _await$getCurrentPosi = _context2.sent;\n              coords = _await$getCurrentPosi.coords;\n              latitude = coords.latitude, longitude = coords.longitude;\n              setCurrentRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: 0.04,\n                longitudeDelta: 0.04\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadInitialPosition();\n  }, []);\n\n  if (!currentRegion) {\n    return null;\n  }\n\n  var cards = [{\n    text: 'Card One',\n    name: 'One',\n    image: {\n      uri: props.Foto1\n    }\n  }, {\n    text: 'Card Two',\n    name: 'Two',\n    image: {\n      uri: props.Foto2\n    }\n  }, {\n    text: 'Card Two',\n    name: 'Two',\n    image: {\n      uri: props.Foto3\n    }\n  }, {\n    text: 'Card Two',\n    name: 'Two',\n    image: {\n      uri: props.Foto4\n    }\n  }, {\n    text: 'Card Two',\n    name: 'Two',\n    image: {\n      uri: props.Foto5\n    }\n  }];\n\n  function NomeProblema() {\n    if (escolha == \"Saude\") {\n      return React.createElement(Picker, {\n        style: {\n          backgroundColor: \"#DCDCDC\",\n          width: 210,\n          height: 25\n        },\n        selectedValue: nomeProblema,\n        onValueChange: function onValueChange(value) {\n          return setNomeProblema(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Hospital Lotado\",\n        value: \"Hospital Lotado\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Foco de Dengue\",\n        value: \"Foco de Dengue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        }\n      }));\n    }\n\n    if (escolha == \"Transito\") {\n      return React.createElement(Picker, {\n        style: {\n          backgroundColor: \"#DCDCDC\",\n          width: 220,\n          height: 25\n        },\n        selectedValue: nomeProblema,\n        onValueChange: function onValueChange(value) {\n          return setNomeProblema(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Sem\\xE1foro Quebrado\",\n        value: \"Sem\\xE1foro Quebrado\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Acidente\",\n        value: \"Acidente\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        }\n      }));\n    }\n\n    if (escolha == \"Ambiental\") {\n      return React.createElement(Picker, {\n        style: {\n          backgroundColor: \"#DCDCDC\",\n          width: 220,\n          height: 25\n        },\n        selectedValue: nomeProblema,\n        onValueChange: function onValueChange(value) {\n          return setNomeProblema(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Polui\\xE7\\xE3o\",\n        value: \"Polui\\xE7\\xE3o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Alagamento\",\n        value: \"Alagamento\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }));\n    }\n  }\n\n  function SwipeDireita() {\n    if (bolinhas == 4) {\n      setBolinhas(0);\n    } else setBolinhas(bolinhas + 1);\n  }\n\n  function SwipeEsquerda() {\n    if (bolinhas == 0) {\n      setBolinhas(4);\n    } else setBolinhas(bolinhas - 1);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    style: {\n      backgroundColor: '#8a2be2'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    }\n  }, 'Área do Problema:'), React.createElement(Picker, {\n    style: {\n      backgroundColor: \"#DCDCDC\",\n      width: 220,\n      height: 25\n    },\n    selectedValue: escolha,\n    onValueChange: (function (value) {\n      return setEscolha(value);\n    }, function (value) {\n      return setEscolha(value);\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Saude\",\n    value: \"Saude\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Transito\",\n    value: \"Transito\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Ambiental\",\n    value: \"Ambiental\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    }\n  }))), React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    }\n  }, 'Nome do Problema:'), React.createElement(NomeProblema, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    }\n  })), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    }\n  }, 'Descrição do Problema:'), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Descreva melhor o problema:\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 10,\n    multiline: true,\n    value: props.descricao,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaDescricao(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    }\n  })), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    }\n  }, 'Sugestão para o problema:'), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Deixe aqui sua sugest\\xE3o para a solu\\xE7\\xE3o deste problema: (Opcional)\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 10,\n    multiline: true,\n    value: props.sugestao,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaSugestao(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    }\n  }, 'Imagens:'), React.createElement(DeckSwiper, {\n    ref: function ref() {},\n    dataSource: cards,\n    looping: false,\n    onSwipeRight: function onSwipeRight() {\n      return SwipeEsquerda();\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      return SwipeDireita();\n    },\n    renderItem: function renderItem() {\n      return React.createElement(Card, {\n        style: {\n          paddingBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        }\n      }, React.createElement(CardItem, {\n        cardBody: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        }\n      }, React.createElement(Image, {\n        style: {\n          height: 300,\n          flex: 1\n        },\n        source: cards[bolinhas].image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        }\n      }, React.createElement(StepIndicator, {\n        customStyles: IndicatorStyles,\n        currentPosition: bolinhas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    }\n  })), React.createElement(Button, {\n    onPress: function onPress() {\n      return cadastrarProblems(props.email, nomeProblema, props.descricao, escolha, currentRegion.latitude, currentRegion.longitude, props.sugestao);\n    },\n    style: {\n      marginTop: 385,\n      marginBottom: 35,\n      backgroundColor: '#8a2be2',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    }\n  }, \"Enviar Problema\"))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    Foto1: state.ProblemaReducer.Foto1,\n    Foto2: state.ProblemaReducer.Foto2,\n    Foto3: state.ProblemaReducer.Foto3,\n    Foto4: state.ProblemaReducer.Foto4,\n    Foto5: state.ProblemaReducer.Foto5,\n    email: state.AutenticacaoReducer.emailLogin,\n    Descricao: state.ProblemaReducer.Descricao,\n    sugestao: state.ProblemaReducer.Sugestao\n  };\n};\n\nexport default connect(mapStateToProps, {\n  modificaDescricao: modificaDescricao,\n  modificaSugestao: modificaSugestao\n})(EnviarProblema);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingTop: 10,\n    backgroundColor: '#DCDCDC'\n  },\n  picker: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 10,\n    borderRadius: 8\n  },\n  text: {\n    fontSize: 15,\n    padding: 5,\n    color: '#8a2be2',\n    fontWeight: 'bold'\n  },\n  textAreaContainer: {\n    borderColor: '#8a2be2',\n    borderWidth: 0.9,\n    borderRadius: 8,\n    padding: 10,\n    height: 130\n  },\n  textArea: {\n    height: 130,\n    width: 300,\n    justifyContent: \"flex-start\",\n    textAlignVertical: 'top'\n  }\n});","map":{"version":3,"sources":["C:/Users/Lucas/tcc/frontend/src/components/EnviarProblema.js"],"names":["React","Component","useState","useEffect","Actions","Container","Header","View","DeckSwiper","Card","CardItem","Thumbnail","Text","Left","Body","Button","Input","Icon","connect","getCurrentPositionAsync","modificaDescricao","modificaSugestao","api","Font","StepIndicator","IndicatorStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","EnviarProblema","props","dataLoaded","setDataLoaded","escolha","setEscolha","nomeProblema","setNomeProblema","currentRegion","setCurrentRegion","bolinhas","setBolinhas","cadastrarProblems","email","descricaoProblema","areaProblema","latitude","longitude","sugestao","arrayDeURL","Foto1","Foto2","Foto3","Foto4","Foto5","urlFoto","i","index","lastIndexOf","filename","substr","form","FormData","append","name","uri","type","headers","post","result","data","url","Alert","alert","navigation","loadInitialPosition","loadAsync","require","retorno","enableHighAccuracy","coords","latitudeDelta","longitudeDelta","cards","text","image","NomeProblema","backgroundColor","width","height","value","SwipeDireita","SwipeEsquerda","styles","container","picker","textAreaContainer","textArea","descricao","texto","paddingTop","paddingBottom","flex","marginTop","marginBottom","justifyContent","mapStateToProps","state","ProblemaReducer","AutenticacaoReducer","emailLogin","Descricao","Sugestao","StyleSheet","create","paddingHorizontal","flexDirection","borderRadius","fontSize","padding","color","fontWeight","borderColor","borderWidth","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { Component ,useState, useEffect} from \"react\";\nimport { StyleSheet, Image, ScrollView, Picker, TextInput,Alert } from \"react-native\";\nimport { Actions} from 'react-native-router-flux'\nimport { Container, Header, View, DeckSwiper, Card, CardItem, Thumbnail, Text, Left, Body, Button, Input, Icon } from 'native-base';\nimport { connect } from 'react-redux';\nimport { getCurrentPositionAsync } from 'expo-location';\nimport { modificaDescricao,modificaSugestao} from '../actions/ProblemaActions'\nimport api from '../../services/api';\nimport * as Font from 'expo-font';\nimport StepIndicator from 'react-native-step-indicator';\n\nconst IndicatorStyles = {\n  stepIndicatorSize: 15,\n  currentStepIndicatorSize: 20,\n  separatorStrokeWidth: 2,\n  currentStepStrokeWidth: 3,\n  stepStrokeCurrentColor: '#8a2be2',\n  stepStrokeWidth: 3,\n  stepStrokeFinishedColor: '#8a2be2',\n  stepStrokeUnFinishedColor: '#dedede',\n  separatorFinishedColor: '#8a2be2',\n  separatorUnFinishedColor: '#dedede',\n  stepIndicatorFinishedColor: '#8a2be2',\n  stepIndicatorUnFinishedColor: '#ffffff',\n  stepIndicatorCurrentColor: '#ffffff',\n}\n\n    export const EnviarProblema = (props) =>  {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [escolha, setEscolha] = useState(\"Saude\");\n    const [nomeProblema, setNomeProblema] = useState(\"Hospital Lotado\");\n    const [currentRegion, setCurrentRegion] = useState(null);\n    const [bolinhas, setBolinhas] = useState(0);\n   \n    async function cadastrarProblems(email, nomeProblema, descricaoProblema, areaProblema, latitude, longitude, sugestao){\n      var arrayDeURL  = [props.Foto1, props.Foto2, props.Foto3, props.Foto4, props.Foto5];\n      const urlFoto =  [];\n      for(var i = 0; i <5; i++){\n      var index = arrayDeURL[i].lastIndexOf(\"/\") + 1;\n      var filename = arrayDeURL[i].substr(index);\n\n      const form = new FormData();\n      form.append('file', {\n        name: filename,\n        uri: arrayDeURL[i],\n        type: 'image/jpeg'\n      });\n      const headers = {\n        'Content-Type': 'multipart/form-data'\n      };\n\n      const result = await api.post('/pictureToServer',form, headers);\n\n      urlFoto[i] = result.data.url;\n    }\n    \n\n      await api.post('/problems', {email,nomeProblema, descricaoProblema, urlFoto, areaProblema, latitude, longitude, sugestao})\n      Alert.alert(\"Problema\",\"Seu problema foi reportado com sucesso!!\");\n      Actions.navigation();\n    \n    }\n\n\n    useEffect(() => {\n\n      \n      async function loadInitialPosition(){\n\n        const retorno = await Font.loadAsync({\n          'adventpro-regular': require('../../assets/fonts/adventpro-regular.ttf'),\n          'Roboto-Regular': require('../../assets/fonts/Roboto-Regular.ttf'),\n          'Roboto_medium': require('../../assets/fonts/Roboto-Medium.ttf')\n  \n          })\n       \n          const { coords } = await getCurrentPositionAsync({\n            enableHighAccuracy: true,\n          });\n  \n          const { latitude, longitude } = coords;\n  \n          setCurrentRegion({\n            latitude,\n            longitude,\n            latitudeDelta: 0.04,\n            longitudeDelta: 0.04,\n          })\n        }  \n      \n  \n      loadInitialPosition();\n    }, []);\n  \n    if(!currentRegion) {\n      return null;\n    }\n    \n\n    const cards = [\n      {\n        text: 'Card One',\n        name: 'One',\n        image:  {uri:props.Foto1}\n      },\n      {\n          text: 'Card Two',\n          name: 'Two',\n          image: {uri:props.Foto2}\n        },\n        {\n          text: 'Card Two',\n          name: 'Two',\n          image: {uri:props.Foto3}\n        },\n        {\n          text: 'Card Two',\n          name: 'Two',\n          image: {uri:props.Foto4}\n        },\n        {\n          text: 'Card Two',\n          name: 'Two',\n          image: {uri:props.Foto5}\n        },\n    ];\n\nfunction NomeProblema(){\n    if(escolha == \"Saude\"){\n        return(\n            <Picker\n            style={{ backgroundColor: \"#DCDCDC\", width: 210, height:25 }}\n            selectedValue={nomeProblema}\n            onValueChange={value => setNomeProblema(value)}\n          >\n            <Picker.Item label=\"Hospital Lotado\" value= \"Hospital Lotado\" />\n      <Picker.Item label=\"Foco de Dengue\" value=\"Foco de Dengue\" />\n          </Picker>\n        )\n    }\n    if(escolha == \"Transito\"){\n        return(\n            <Picker\n            style={{ backgroundColor: \"#DCDCDC\", width: 220, height:25 }}\n            selectedValue={nomeProblema}\n            onValueChange={value => setNomeProblema(value)}\n          >\n            <Picker.Item label=\"Semáforo Quebrado\" value= \"Semáforo Quebrado\" />\n        <Picker.Item label=\"Acidente\" value=\"Acidente\" />\n          </Picker>\n        )\n    }\n    if(escolha == \"Ambiental\"){\n      return(\n          <Picker\n          style={{ backgroundColor: \"#DCDCDC\", width: 220, height:25 }}\n          selectedValue={nomeProblema}\n          onValueChange={value => setNomeProblema(value)}\n        >\n          <Picker.Item label=\"Poluição\" value= \"Poluição\" />\n      <Picker.Item label=\"Alagamento\" value=\"Alagamento\" />\n        </Picker>\n      )\n  }\n  \n  }\nfunction SwipeDireita(){\n  if(bolinhas == 4){\n    setBolinhas(0)\n  }\n  else setBolinhas(bolinhas + 1)\n}\n\nfunction SwipeEsquerda(){\n  if(bolinhas == 0){\n    setBolinhas(4)\n  }\n  else setBolinhas(bolinhas - 1)\n}\n    \n\n  return (\n    <>\n    <Header style={{backgroundColor: '#8a2be2'}}/>\n    <ScrollView style={styles.container} >\n    <View style={styles.picker}>\n      <Text style={styles.text}>{'Área do Problema:'}</Text>\n        <Picker\n            style={{ backgroundColor: \"#DCDCDC\", width: 220, height:25 }}\n            selectedValue={escolha}\n            onValueChange={value => setEscolha(value) , value => setEscolha(value) \n            }\n        >\n      \n                <Picker.Item label=\"Saude\" value= \"Saude\" />\n                <Picker.Item label=\"Transito\" value=\"Transito\" />\n                <Picker.Item label=\"Ambiental\" value=\"Ambiental\" />         \n        </Picker>\n    </View> \n    <View style={styles.picker}>\n            <Text style={styles.text}>{'Nome do Problema:'}</Text>\n                <NomeProblema />\n    </View>      \n                <Text style={styles.text}>{'Descrição do Problema:'}</Text>      \n                <View style={styles.textAreaContainer} >\n                    <TextInput\n                      style={styles.textArea}\n                      underlineColorAndroid=\"transparent\"\n                      placeholder=\"Descreva melhor o problema:\"\n                      placeholderTextColor=\"grey\"\n                      numberOfLines={10}\n                      multiline={true}\n                      value={props.descricao}\n                      onChangeText={texto => props.modificaDescricao(texto)}\n                    />\n                </View>\n\n                <Text style={styles.text}>{'Sugestão para o problema:'}</Text>      \n                <View style={styles.textAreaContainer} >\n                    <TextInput\n                      style={styles.textArea}\n                      underlineColorAndroid=\"transparent\"\n                      placeholder=\"Deixe aqui sua sugestão para a solução deste problema: (Opcional)\"\n                      placeholderTextColor=\"grey\"\n                      numberOfLines={10}\n                      multiline={true}\n                      value={props.sugestao}\n                      onChangeText={texto => props.modificaSugestao(texto)}\n                    />\n                </View>\n      <View style={{ paddingTop: 20}}> \n      <Text style={styles.text}>{'Imagens:'}</Text>          \n      <DeckSwiper\n        ref={() => {}}\n        dataSource={cards}\n        looping= {false}\n        onSwipeRight={() => SwipeEsquerda()  }\n        onSwipeLeft={() => SwipeDireita() }\n        renderItem={() =>\n          <Card style={{  paddingBottom: 20 }}>\n            <CardItem cardBody>\n              <Image style={{ height: 300, flex: 1 }} source={cards[bolinhas].image} />\n            </CardItem>\n            <View style={{paddingTop: 10}}>\n              <StepIndicator\n              customStyles={IndicatorStyles}\n              currentPosition={bolinhas}\n              />\n            </View>\n          </Card>\n        }\n      />\n      </View>\n\n      <Button  onPress={() => cadastrarProblems(props.email, nomeProblema, props.descricao, escolha, currentRegion.latitude, currentRegion.longitude, props.sugestao)} style={{ marginTop:385, marginBottom: 35, backgroundColor: '#8a2be2', justifyContent: 'center'}} >\n        <Text >Enviar Problema</Text>\n      </Button>\n  </ScrollView>\n  </>\n  );\n}\n\nconst mapStateToProps = state =>(\n  {\n    Foto1: state.ProblemaReducer.Foto1,\n    Foto2: state.ProblemaReducer.Foto2,\n    Foto3: state.ProblemaReducer.Foto3,\n    Foto4: state.ProblemaReducer.Foto4,\n    Foto5: state.ProblemaReducer.Foto5,\n    email: state.AutenticacaoReducer.emailLogin,\n    Descricao: state.ProblemaReducer.Descricao,\n    sugestao: state.ProblemaReducer.Sugestao\n  }\n  \n)\n\nexport default connect(mapStateToProps, {modificaDescricao,modificaSugestao})(EnviarProblema);\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    paddingHorizontal: 10,\n    paddingTop: 10,\n    backgroundColor: '#DCDCDC'\n  },\n  picker: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 10,\n    borderRadius: 8,\n    \n  },\n  text: {\n    fontSize: 15,\n    padding: 5,\n    color: '#8a2be2',\n    fontWeight: 'bold'\n  },\n  textAreaContainer: {\n    borderColor: '#8a2be2',\n    borderWidth: 0.9,\n    borderRadius: 8,\n    padding: 10,\n    height: 130\n  },\n  textArea: {\n    height: 130,\n    width: 300,\n    justifyContent: \"flex-start\",\n    textAlignVertical: 'top',\n  }\n});"]},"metadata":{},"sourceType":"module"}