{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\tcc\\\\frontend\\\\node_modules\\\\react-native-step-indicator\\\\StepIndicator.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nvar STEP_STATUS = {\n  CURRENT: 'current',\n  FINISHED: 'finished',\n  UNFINISHED: 'unfinished'\n};\n\nvar StepIndicator = function (_Component) {\n  _inherits(StepIndicator, _Component);\n\n  function StepIndicator(props) {\n    var _this;\n\n    _classCallCheck(this, StepIndicator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StepIndicator).call(this, props));\n\n    _this.renderProgressBarBackground = function () {\n      var _this$props = _this.props,\n          stepCount = _this$props.stepCount,\n          direction = _this$props.direction;\n      var progressBarBackgroundStyle;\n\n      if (direction === 'vertical') {\n        progressBarBackgroundStyle = {\n          backgroundColor: _this.state.customStyles.separatorUnFinishedColor,\n          position: 'absolute',\n          left: (_this.state.width - _this.state.customStyles.separatorStrokeWidth) / 2,\n          top: _this.state.height / (2 * stepCount),\n          bottom: _this.state.height / (2 * stepCount),\n          width: _this.state.customStyles.separatorStrokeUnfinishedWidth == 0 ? _this.state.customStyles.separatorStrokeWidth : _this.state.customStyles.separatorStrokeUnfinishedWidth\n        };\n      } else {\n        progressBarBackgroundStyle = {\n          backgroundColor: _this.state.customStyles.separatorUnFinishedColor,\n          position: 'absolute',\n          top: (_this.state.height - _this.state.customStyles.separatorStrokeWidth) / 2,\n          left: _this.state.width / (2 * stepCount),\n          right: _this.state.width / (2 * stepCount),\n          height: _this.state.customStyles.separatorStrokeUnfinishedWidth == 0 ? _this.state.customStyles.separatorStrokeWidth : _this.state.customStyles.separatorStrokeUnfinishedWidth\n        };\n      }\n\n      return React.createElement(View, {\n        onLayout: function onLayout(event) {\n          if (direction === 'vertical') {\n            _this.setState({\n              progressBarSize: event.nativeEvent.layout.height\n            }, function () {\n              _this.onCurrentPositionChanged(_this.props.currentPosition);\n            });\n          } else {\n            _this.setState({\n              progressBarSize: event.nativeEvent.layout.width\n            }, function () {\n              _this.onCurrentPositionChanged(_this.props.currentPosition);\n            });\n          }\n        },\n        style: progressBarBackgroundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      });\n    };\n\n    _this.renderProgressBar = function () {\n      var _this$props2 = _this.props,\n          stepCount = _this$props2.stepCount,\n          direction = _this$props2.direction;\n      var progressBarStyle;\n\n      if (direction === 'vertical') {\n        progressBarStyle = {\n          backgroundColor: _this.state.customStyles.separatorFinishedColor,\n          position: 'absolute',\n          left: (_this.state.width - _this.state.customStyles.separatorStrokeWidth) / 2,\n          top: _this.state.height / (2 * stepCount),\n          bottom: _this.state.height / (2 * stepCount),\n          width: _this.state.customStyles.separatorStrokeFinishedWidth == 0 ? _this.state.customStyles.separatorStrokeWidth : _this.state.customStyles.separatorStrokeFinishedWidth,\n          height: _this.progressAnim\n        };\n      } else {\n        progressBarStyle = {\n          backgroundColor: _this.state.customStyles.separatorFinishedColor,\n          position: 'absolute',\n          top: (_this.state.height - _this.state.customStyles.separatorStrokeWidth) / 2,\n          left: _this.state.width / (2 * stepCount),\n          right: _this.state.width / (2 * stepCount),\n          height: _this.state.customStyles.separatorStrokeFinishedWidth == 0 ? _this.state.customStyles.separatorStrokeWidth : _this.state.customStyles.separatorStrokeFinishedWidth,\n          width: _this.progressAnim\n        };\n      }\n\n      return React.createElement(Animated.View, {\n        style: progressBarStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        }\n      });\n    };\n\n    _this.renderStepIndicator = function () {\n      var steps = [];\n      var _this$props3 = _this.props,\n          labels = _this$props3.labels,\n          stepCount = _this$props3.stepCount,\n          direction = _this$props3.direction;\n\n      var _loop = function _loop(position) {\n        steps.push(React.createElement(TouchableWithoutFeedback, {\n          key: position,\n          onPress: function onPress() {\n            return _this.stepPressed(position);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          }\n        }, React.createElement(View, {\n          style: [styles.stepContainer, direction === 'vertical' ? {\n            flexDirection: 'column'\n          } : {\n            flexDirection: 'row'\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          }\n        }, _this.renderStep(position))));\n      };\n\n      for (var position = 0; position < stepCount; position++) {\n        _loop(position);\n      }\n\n      return React.createElement(View, {\n        onLayout: function onLayout(event) {\n          return _this.setState({\n            width: event.nativeEvent.layout.width,\n            height: event.nativeEvent.layout.height\n          });\n        },\n        style: [styles.stepIndicatorContainer, direction === 'vertical' ? {\n          flexDirection: 'column',\n          width: _this.state.customStyles.currentStepIndicatorSize\n        } : {\n          flexDirection: 'row',\n          height: _this.state.customStyles.currentStepIndicatorSize\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        }\n      }, steps);\n    };\n\n    _this.renderStepLabels = function () {\n      var _this$props4 = _this.props,\n          labels = _this$props4.labels,\n          direction = _this$props4.direction,\n          currentPosition = _this$props4.currentPosition,\n          renderLabel = _this$props4.renderLabel;\n      var labelViews = labels.map(function (label, index) {\n        var selectedStepLabelStyle = index === currentPosition ? {\n          color: _this.state.customStyles.currentStepLabelColor\n        } : {\n          color: _this.state.customStyles.labelColor\n        };\n        return React.createElement(TouchableWithoutFeedback, {\n          style: styles.stepLabelItem,\n          key: index,\n          onPress: function onPress() {\n            return _this.stepPressed(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          }\n        }, React.createElement(View, {\n          style: styles.stepLabelItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          }\n        }, renderLabel ? renderLabel({\n          position: index,\n          stepStatus: _this.getStepStatus(index),\n          label: label,\n          currentPosition: currentPosition\n        }) : React.createElement(Text, {\n          style: [styles.stepLabel, selectedStepLabelStyle, {\n            fontSize: _this.state.customStyles.labelSize,\n            fontFamily: _this.state.customStyles.labelFontFamily\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          }\n        }, label)));\n      });\n      return React.createElement(View, {\n        style: [styles.stepLabelsContainer, direction === 'vertical' ? {\n          flexDirection: 'column',\n          paddingHorizontal: 4\n        } : {\n          flexDirection: 'row',\n          paddingVertical: 4\n        }, {\n          alignItems: _this.state.customStyles.labelAlign\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        }\n      }, labelViews);\n    };\n\n    _this.renderStep = function (position) {\n      var _this$props5 = _this.props,\n          currentPosition = _this$props5.currentPosition,\n          stepCount = _this$props5.stepCount,\n          direction = _this$props5.direction,\n          renderStepIndicator = _this$props5.renderStepIndicator;\n      var stepStyle;\n      var indicatorLabelStyle;\n      var separatorStyle = direction === 'vertical' ? {\n        width: _this.state.customStyles.separatorStrokeWidth,\n        zIndex: 10\n      } : {\n        height: _this.state.customStyles.separatorStrokeWidth\n      };\n\n      switch (_this.getStepStatus(position)) {\n        case STEP_STATUS.CURRENT:\n          {\n            stepStyle = {\n              backgroundColor: _this.state.customStyles.stepIndicatorCurrentColor,\n              borderWidth: _this.state.customStyles.currentStepStrokeWidth,\n              borderColor: _this.state.customStyles.stepStrokeCurrentColor,\n              height: _this.sizeAnim,\n              width: _this.sizeAnim,\n              borderRadius: _this.borderRadiusAnim\n            };\n            indicatorLabelStyle = {\n              fontSize: _this.state.customStyles.currentStepIndicatorLabelFontSize,\n              color: _this.state.customStyles.stepIndicatorLabelCurrentColor\n            };\n            break;\n          }\n\n        case STEP_STATUS.FINISHED:\n          {\n            stepStyle = {\n              backgroundColor: _this.state.customStyles.stepIndicatorFinishedColor,\n              borderWidth: _this.state.customStyles.stepStrokeWidth,\n              borderColor: _this.state.customStyles.stepStrokeFinishedColor,\n              height: _this.state.customStyles.stepIndicatorSize,\n              width: _this.state.customStyles.stepIndicatorSize,\n              borderRadius: _this.state.customStyles.stepIndicatorSize / 2\n            };\n            indicatorLabelStyle = {\n              fontSize: _this.state.customStyles.stepIndicatorLabelFontSize,\n              color: _this.state.customStyles.stepIndicatorLabelFinishedColor\n            };\n            break;\n          }\n\n        case STEP_STATUS.UNFINISHED:\n          {\n            stepStyle = {\n              backgroundColor: _this.state.customStyles.stepIndicatorUnFinishedColor,\n              borderWidth: _this.state.customStyles.stepStrokeWidth,\n              borderColor: _this.state.customStyles.stepStrokeUnFinishedColor,\n              height: _this.state.customStyles.stepIndicatorSize,\n              width: _this.state.customStyles.stepIndicatorSize,\n              borderRadius: _this.state.customStyles.stepIndicatorSize / 2\n            };\n            indicatorLabelStyle = {\n              overflow: 'hidden',\n              fontSize: _this.state.customStyles.stepIndicatorLabelFontSize,\n              color: _this.state.customStyles.stepIndicatorLabelUnFinishedColor\n            };\n            break;\n          }\n\n        default:\n      }\n\n      return React.createElement(Animated.View, {\n        key: 'step-indicator',\n        style: [styles.step, stepStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        }\n      }, renderStepIndicator ? renderStepIndicator({\n        position: position,\n        stepStatus: _this.getStepStatus(position)\n      }) : React.createElement(Text, {\n        style: indicatorLabelStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        }\n      }, \"\" + (position + 1)));\n    };\n\n    _this.getStepStatus = function (stepPosition) {\n      var currentPosition = _this.props.currentPosition;\n\n      if (stepPosition === currentPosition) {\n        return STEP_STATUS.CURRENT;\n      } else if (stepPosition < currentPosition) {\n        return STEP_STATUS.FINISHED;\n      } else {\n        return STEP_STATUS.UNFINISHED;\n      }\n    };\n\n    _this.onCurrentPositionChanged = function (position) {\n      var stepCount = _this.props.stepCount;\n\n      if (position > stepCount - 1) {\n        position = stepCount - 1;\n      }\n\n      var animateToPosition = _this.state.progressBarSize / (stepCount - 1) * position;\n\n      _this.sizeAnim.setValue(_this.state.customStyles.stepIndicatorSize);\n\n      _this.borderRadiusAnim.setValue(_this.state.customStyles.stepIndicatorSize / 2);\n\n      Animated.sequence([Animated.timing(_this.progressAnim, {\n        toValue: animateToPosition,\n        duration: 200\n      }), Animated.parallel([Animated.timing(_this.sizeAnim, {\n        toValue: _this.state.customStyles.currentStepIndicatorSize,\n        duration: 100\n      }), Animated.timing(_this.borderRadiusAnim, {\n        toValue: _this.state.customStyles.currentStepIndicatorSize / 2,\n        duration: 100\n      })])]).start();\n    };\n\n    var defaultStyles = {\n      stepIndicatorSize: 30,\n      currentStepIndicatorSize: 40,\n      separatorStrokeWidth: 3,\n      separatorStrokeUnfinishedWidth: 0,\n      separatorStrokeFinishedWidth: 0,\n      currentStepStrokeWidth: 5,\n      stepStrokeWidth: 0,\n      stepStrokeCurrentColor: '#4aae4f',\n      stepStrokeFinishedColor: '#4aae4f',\n      stepStrokeUnFinishedColor: '#4aae4f',\n      separatorFinishedColor: '#4aae4f',\n      separatorUnFinishedColor: '#a4d4a5',\n      stepIndicatorFinishedColor: '#4aae4f',\n      stepIndicatorUnFinishedColor: '#a4d4a5',\n      stepIndicatorCurrentColor: '#ffffff',\n      stepIndicatorLabelFontSize: 15,\n      currentStepIndicatorLabelFontSize: 15,\n      stepIndicatorLabelCurrentColor: '#000000',\n      stepIndicatorLabelFinishedColor: '#ffffff',\n      stepIndicatorLabelUnFinishedColor: 'rgba(255,255,255,0.5)',\n      labelColor: '#000000',\n      labelSize: 13,\n      labelAlign: 'center',\n      currentStepLabelColor: '#4aae4f'\n    };\n\n    var customStyles = _extends(defaultStyles, props.customStyles);\n\n    _this.state = {\n      width: 0,\n      height: 0,\n      progressBarSize: 0,\n      customStyles: customStyles\n    };\n    _this.progressAnim = new Animated.Value(0);\n    _this.sizeAnim = new Animated.Value(_this.state.customStyles.stepIndicatorSize);\n    _this.borderRadiusAnim = new Animated.Value(_this.state.customStyles.stepIndicatorSize / 2);\n    return _this;\n  }\n\n  _createClass(StepIndicator, [{\n    key: \"stepPressed\",\n    value: function stepPressed(position) {\n      if (this.props.onPress) {\n        this.props.onPress(position);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          labels = _this$props6.labels,\n          direction = _this$props6.direction;\n      return React.createElement(View, {\n        style: [styles.container, direction === 'vertical' ? {\n          flexDirection: 'row',\n          flex: 1\n        } : {\n          flexDirection: 'column'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, this.state.width !== 0 && this.renderProgressBarBackground(), this.state.width !== 0 && this.renderProgressBar(), this.renderStepIndicator(), labels && this.renderStepLabels());\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.customStyles !== this.props.customStyles) {\n        this.setState(function (state) {\n          return {\n            customStyles: _extends(state.customStyles, nextProps.customStyles)\n          };\n        });\n      }\n\n      if (nextProps.currentPosition !== this.props.currentPosition) {\n        this.onCurrentPositionChanged(nextProps.currentPosition);\n      }\n    }\n  }]);\n\n  return StepIndicator;\n}(Component);\n\nexport { StepIndicator as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent'\n  },\n  stepIndicatorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    backgroundColor: 'transparent'\n  },\n  stepLabelsContainer: {\n    justifyContent: 'space-around'\n  },\n  step: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2\n  },\n  stepContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  stepLabel: {\n    fontSize: 12,\n    textAlign: 'center',\n    fontWeight: '500'\n  },\n  stepLabelItem: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nStepIndicator.propTypes = {\n  currentPosition: PropTypes.number,\n  stepCount: PropTypes.number,\n  customStyles: PropTypes.object,\n  direction: PropTypes.oneOf(['vertical', 'horizontal']),\n  labels: PropTypes.array,\n  onPress: PropTypes.func,\n  renderStepIndicator: PropTypes.func,\n  renderLabel: PropTypes.func\n};\nStepIndicator.defaultProps = {\n  currentPosition: 0,\n  stepCount: 5,\n  customStyles: {},\n  direction: 'horizontal'\n};","map":{"version":3,"sources":["C:/Users/Lucas/tcc/frontend/node_modules/react-native-step-indicator/StepIndicator.js"],"names":["React","Component","PropTypes","STEP_STATUS","CURRENT","FINISHED","UNFINISHED","StepIndicator","props","renderProgressBarBackground","stepCount","direction","progressBarBackgroundStyle","backgroundColor","state","customStyles","separatorUnFinishedColor","position","left","width","separatorStrokeWidth","top","height","bottom","separatorStrokeUnfinishedWidth","right","event","setState","progressBarSize","nativeEvent","layout","onCurrentPositionChanged","currentPosition","renderProgressBar","progressBarStyle","separatorFinishedColor","separatorStrokeFinishedWidth","progressAnim","renderStepIndicator","steps","labels","push","stepPressed","styles","stepContainer","flexDirection","renderStep","stepIndicatorContainer","currentStepIndicatorSize","renderStepLabels","renderLabel","labelViews","map","label","index","selectedStepLabelStyle","color","currentStepLabelColor","labelColor","stepLabelItem","stepStatus","getStepStatus","stepLabel","fontSize","labelSize","fontFamily","labelFontFamily","stepLabelsContainer","paddingHorizontal","paddingVertical","alignItems","labelAlign","stepStyle","indicatorLabelStyle","separatorStyle","zIndex","stepIndicatorCurrentColor","borderWidth","currentStepStrokeWidth","borderColor","stepStrokeCurrentColor","sizeAnim","borderRadius","borderRadiusAnim","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorFinishedColor","stepStrokeWidth","stepStrokeFinishedColor","stepIndicatorSize","stepIndicatorLabelFontSize","stepIndicatorLabelFinishedColor","stepIndicatorUnFinishedColor","stepStrokeUnFinishedColor","overflow","stepIndicatorLabelUnFinishedColor","step","stepPosition","animateToPosition","setValue","Animated","sequence","timing","toValue","duration","parallel","start","defaultStyles","Value","onPress","container","flex","nextProps","StyleSheet","create","justifyContent","textAlign","fontWeight","propTypes","number","object","oneOf","array","func","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AASA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,SADS;AAElBC,EAAAA,QAAQ,EAAE,UAFQ;AAGlBC,EAAAA,UAAU,EAAE;AAHM,CAApB;;IAMqBC,a;;;AACnB,yBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,uFAAMA,KAAN;;AADkB,UAmFpBC,2BAnFoB,GAmFU,YAAM;AAAA,wBACD,MAAKD,KADJ;AAAA,UAC1BE,SAD0B,eAC1BA,SAD0B;AAAA,UACfC,SADe,eACfA,SADe;AAElC,UAAIC,0BAAJ;;AACA,UAAID,SAAS,KAAK,UAAlB,EAA8B;AAC5BC,QAAAA,0BAA0B,GAAG;AAC3BC,UAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,wBADd;AAE3BC,UAAAA,QAAQ,EAAE,UAFiB;AAG3BC,UAAAA,IAAI,EACF,CAAC,MAAKJ,KAAL,CAAWK,KAAX,GAAmB,MAAKL,KAAL,CAAWC,YAAX,CAAwBK,oBAA5C,IAAoE,CAJ3C;AAK3BC,UAAAA,GAAG,EAAE,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,IAAIZ,SAAzB,CALsB;AAM3Ba,UAAAA,MAAM,EAAE,MAAKT,KAAL,CAAWQ,MAAX,IAAqB,IAAIZ,SAAzB,CANmB;AAO3BS,UAAAA,KAAK,EACH,MAAKL,KAAL,CAAWC,YAAX,CAAwBS,8BAAxB,IAA0D,CAA1D,GACI,MAAKV,KAAL,CAAWC,YAAX,CAAwBK,oBAD5B,GAEI,MAAKN,KAAL,CAAWC,YAAX,CAAwBS;AAVH,SAA7B;AAYD,OAbD,MAaO;AACLZ,QAAAA,0BAA0B,GAAG;AAC3BC,UAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,wBADd;AAE3BC,UAAAA,QAAQ,EAAE,UAFiB;AAG3BI,UAAAA,GAAG,EACD,CAAC,MAAKP,KAAL,CAAWQ,MAAX,GAAoB,MAAKR,KAAL,CAAWC,YAAX,CAAwBK,oBAA7C,IACA,CALyB;AAM3BF,UAAAA,IAAI,EAAE,MAAKJ,KAAL,CAAWK,KAAX,IAAoB,IAAIT,SAAxB,CANqB;AAO3Be,UAAAA,KAAK,EAAE,MAAKX,KAAL,CAAWK,KAAX,IAAoB,IAAIT,SAAxB,CAPoB;AAQ3BY,UAAAA,MAAM,EACJ,MAAKR,KAAL,CAAWC,YAAX,CAAwBS,8BAAxB,IAA0D,CAA1D,GACI,MAAKV,KAAL,CAAWC,YAAX,CAAwBK,oBAD5B,GAEI,MAAKN,KAAL,CAAWC,YAAX,CAAwBS;AAXH,SAA7B;AAaD;;AACD,aACE,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAE,kBAAAE,KAAK,EAAI;AACjB,cAAIf,SAAS,KAAK,UAAlB,EAA8B;AAC5B,kBAAKgB,QAAL,CACE;AAAEC,cAAAA,eAAe,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyBR;AAA5C,aADF,EAEE,YAAM;AACJ,oBAAKS,wBAAL,CAA8B,MAAKvB,KAAL,CAAWwB,eAAzC;AACD,aAJH;AAMD,WAPD,MAOO;AACL,kBAAKL,QAAL,CACE;AAAEC,cAAAA,eAAe,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyBX;AAA5C,aADF,EAEE,YAAM;AACJ,oBAAKY,wBAAL,CAA8B,MAAKvB,KAAL,CAAWwB,eAAzC;AACD,aAJH;AAMD;AACF,SAjBH;AAkBE,QAAA,KAAK,EAAEpB,0BAlBT;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAsBD,KAxImB;;AAAA,UA0IpBqB,iBA1IoB,GA0IA,YAAM;AAAA,yBACS,MAAKzB,KADd;AAAA,UAChBE,SADgB,gBAChBA,SADgB;AAAA,UACLC,SADK,gBACLA,SADK;AAExB,UAAIuB,gBAAJ;;AACA,UAAIvB,SAAS,KAAK,UAAlB,EAA8B;AAC5BuB,QAAAA,gBAAgB,GAAG;AACjBrB,UAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwBoB,sBADxB;AAEjBlB,UAAAA,QAAQ,EAAE,UAFO;AAGjBC,UAAAA,IAAI,EACF,CAAC,MAAKJ,KAAL,CAAWK,KAAX,GAAmB,MAAKL,KAAL,CAAWC,YAAX,CAAwBK,oBAA5C,IAAoE,CAJrD;AAKjBC,UAAAA,GAAG,EAAE,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,IAAIZ,SAAzB,CALY;AAMjBa,UAAAA,MAAM,EAAE,MAAKT,KAAL,CAAWQ,MAAX,IAAqB,IAAIZ,SAAzB,CANS;AAOjBS,UAAAA,KAAK,EACH,MAAKL,KAAL,CAAWC,YAAX,CAAwBqB,4BAAxB,IAAwD,CAAxD,GACI,MAAKtB,KAAL,CAAWC,YAAX,CAAwBK,oBAD5B,GAEI,MAAKN,KAAL,CAAWC,YAAX,CAAwBqB,4BAVb;AAWjBd,UAAAA,MAAM,EAAE,MAAKe;AAXI,SAAnB;AAaD,OAdD,MAcO;AACLH,QAAAA,gBAAgB,GAAG;AACjBrB,UAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwBoB,sBADxB;AAEjBlB,UAAAA,QAAQ,EAAE,UAFO;AAGjBI,UAAAA,GAAG,EACD,CAAC,MAAKP,KAAL,CAAWQ,MAAX,GAAoB,MAAKR,KAAL,CAAWC,YAAX,CAAwBK,oBAA7C,IACA,CALe;AAMjBF,UAAAA,IAAI,EAAE,MAAKJ,KAAL,CAAWK,KAAX,IAAoB,IAAIT,SAAxB,CANW;AAOjBe,UAAAA,KAAK,EAAE,MAAKX,KAAL,CAAWK,KAAX,IAAoB,IAAIT,SAAxB,CAPU;AAQjBY,UAAAA,MAAM,EACJ,MAAKR,KAAL,CAAWC,YAAX,CAAwBqB,4BAAxB,IAAwD,CAAxD,GACI,MAAKtB,KAAL,CAAWC,YAAX,CAAwBK,oBAD5B,GAEI,MAAKN,KAAL,CAAWC,YAAX,CAAwBqB,4BAXb;AAYjBjB,UAAAA,KAAK,EAAE,MAAKkB;AAZK,SAAnB;AAcD;;AACD,aAAO,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAEH,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KA5KmB;;AAAA,UA8KpBI,mBA9KoB,GA8KE,YAAM;AAC1B,UAAIC,KAAK,GAAG,EAAZ;AAD0B,yBAEe,MAAK/B,KAFpB;AAAA,UAElBgC,MAFkB,gBAElBA,MAFkB;AAAA,UAEV9B,SAFU,gBAEVA,SAFU;AAAA,UAECC,SAFD,gBAECA,SAFD;;AAAA,iCAGjBM,QAHiB;AAIxBsB,QAAAA,KAAK,CAACE,IAAN,CACE,oBAAC,wBAAD;AACE,UAAA,GAAG,EAAExB,QADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKyB,WAAL,CAAiBzB,QAAjB,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACL0B,MAAM,CAACC,aADF,EAELjC,SAAS,KAAK,UAAd,GACI;AAAEkC,YAAAA,aAAa,EAAE;AAAjB,WADJ,GAEI;AAAEA,YAAAA,aAAa,EAAE;AAAjB,WAJC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,WAQG,MAAKC,UAAL,CAAgB7B,QAAhB,CARH,CAJF,CADF;AAJwB;;AAG1B,WAAK,IAAIA,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGP,SAAlC,EAA6CO,QAAQ,EAArD,EAAyD;AAAA,cAAhDA,QAAgD;AAkBxD;;AACD,aACE,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAE,kBAAAS,KAAK;AAAA,iBACb,MAAKC,QAAL,CAAc;AACZR,YAAAA,KAAK,EAAEO,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyBX,KADpB;AAEZG,YAAAA,MAAM,EAAEI,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyBR;AAFrB,WAAd,CADa;AAAA,SADjB;AAOE,QAAA,KAAK,EAAE,CACLqB,MAAM,CAACI,sBADF,EAELpC,SAAS,KAAK,UAAd,GACI;AACAkC,UAAAA,aAAa,EAAE,QADf;AAEA1B,UAAAA,KAAK,EAAE,MAAKL,KAAL,CAAWC,YAAX,CAAwBiC;AAF/B,SADJ,GAKI;AACAH,UAAAA,aAAa,EAAE,KADf;AAEAvB,UAAAA,MAAM,EAAE,MAAKR,KAAL,CAAWC,YAAX,CAAwBiC;AAFhC,SAPC,CAPT;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBGT,KApBH,CADF;AAwBD,KA5NmB;;AAAA,UA8NpBU,gBA9NoB,GA8ND,YAAM;AAAA,yBACqC,MAAKzC,KAD1C;AAAA,UACfgC,MADe,gBACfA,MADe;AAAA,UACP7B,SADO,gBACPA,SADO;AAAA,UACIqB,eADJ,gBACIA,eADJ;AAAA,UACqBkB,WADrB,gBACqBA,WADrB;AAEvB,UAAIC,UAAU,GAAGX,MAAM,CAACY,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5C,YAAMC,sBAAsB,GAC1BD,KAAK,KAAKtB,eAAV,GACI;AAAEwB,UAAAA,KAAK,EAAE,MAAK1C,KAAL,CAAWC,YAAX,CAAwB0C;AAAjC,SADJ,GAEI;AAAED,UAAAA,KAAK,EAAE,MAAK1C,KAAL,CAAWC,YAAX,CAAwB2C;AAAjC,SAHN;AAIA,eACE,oBAAC,wBAAD;AACE,UAAA,KAAK,EAAEf,MAAM,CAACgB,aADhB;AAEE,UAAA,GAAG,EAAEL,KAFP;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKZ,WAAL,CAAiBY,KAAjB,CAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACgB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA,WACGT,WAAW,GACVA,WAAW,CAAC;AACVjC,UAAAA,QAAQ,EAAEqC,KADA;AAEVM,UAAAA,UAAU,EAAE,MAAKC,aAAL,CAAmBP,KAAnB,CAFF;AAGVD,UAAAA,KAAK,EAALA,KAHU;AAIVrB,UAAAA,eAAe,EAAfA;AAJU,SAAD,CADD,GAQV,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLW,MAAM,CAACmB,SADF,EAELP,sBAFK,EAGL;AACEQ,YAAAA,QAAQ,EAAE,MAAKjD,KAAL,CAAWC,YAAX,CAAwBiD,SADpC;AAEEC,YAAAA,UAAU,EAAE,MAAKnD,KAAL,CAAWC,YAAX,CAAwBmD;AAFtC,WAHK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,WAUGb,KAVH,CATJ,CALF,CADF;AA+BD,OApCgB,CAAjB;AAsCA,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACLV,MAAM,CAACwB,mBADF,EAELxD,SAAS,KAAK,UAAd,GACI;AAAEkC,UAAAA,aAAa,EAAE,QAAjB;AAA2BuB,UAAAA,iBAAiB,EAAE;AAA9C,SADJ,GAEI;AAAEvB,UAAAA,aAAa,EAAE,KAAjB;AAAwBwB,UAAAA,eAAe,EAAE;AAAzC,SAJC,EAKL;AAAEC,UAAAA,UAAU,EAAE,MAAKxD,KAAL,CAAWC,YAAX,CAAwBwD;AAAtC,SALK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,SASGpB,UATH,CADF;AAaD,KAnRmB;;AAAA,UAqRpBL,UArRoB,GAqRP,UAAA7B,QAAQ,EAAI;AAAA,yBAMnB,MAAKT,KANc;AAAA,UAErBwB,eAFqB,gBAErBA,eAFqB;AAAA,UAGrBtB,SAHqB,gBAGrBA,SAHqB;AAAA,UAIrBC,SAJqB,gBAIrBA,SAJqB;AAAA,UAKrB2B,mBALqB,gBAKrBA,mBALqB;AAOvB,UAAIkC,SAAJ;AACA,UAAIC,mBAAJ;AACA,UAAMC,cAAc,GAClB/D,SAAS,KAAK,UAAd,GACI;AAAEQ,QAAAA,KAAK,EAAE,MAAKL,KAAL,CAAWC,YAAX,CAAwBK,oBAAjC;AAAuDuD,QAAAA,MAAM,EAAE;AAA/D,OADJ,GAEI;AAAErD,QAAAA,MAAM,EAAE,MAAKR,KAAL,CAAWC,YAAX,CAAwBK;AAAlC,OAHN;;AAIA,cAAQ,MAAKyC,aAAL,CAAmB5C,QAAnB,CAAR;AACE,aAAKd,WAAW,CAACC,OAAjB;AAA0B;AACxBoE,YAAAA,SAAS,GAAG;AACV3D,cAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwB6D,yBAD/B;AAEVC,cAAAA,WAAW,EAAE,MAAK/D,KAAL,CAAWC,YAAX,CAAwB+D,sBAF3B;AAGVC,cAAAA,WAAW,EAAE,MAAKjE,KAAL,CAAWC,YAAX,CAAwBiE,sBAH3B;AAIV1D,cAAAA,MAAM,EAAE,MAAK2D,QAJH;AAKV9D,cAAAA,KAAK,EAAE,MAAK8D,QALF;AAMVC,cAAAA,YAAY,EAAE,MAAKC;AANT,aAAZ;AAQAV,YAAAA,mBAAmB,GAAG;AACpBV,cAAAA,QAAQ,EAAE,MAAKjD,KAAL,CAAWC,YAAX,CAAwBqE,iCADd;AAEpB5B,cAAAA,KAAK,EAAE,MAAK1C,KAAL,CAAWC,YAAX,CAAwBsE;AAFX,aAAtB;AAKA;AACD;;AACD,aAAKlF,WAAW,CAACE,QAAjB;AAA2B;AACzBmE,YAAAA,SAAS,GAAG;AACV3D,cAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwBuE,0BAD/B;AAEVT,cAAAA,WAAW,EAAE,MAAK/D,KAAL,CAAWC,YAAX,CAAwBwE,eAF3B;AAGVR,cAAAA,WAAW,EAAE,MAAKjE,KAAL,CAAWC,YAAX,CAAwByE,uBAH3B;AAIVlE,cAAAA,MAAM,EAAE,MAAKR,KAAL,CAAWC,YAAX,CAAwB0E,iBAJtB;AAKVtE,cAAAA,KAAK,EAAE,MAAKL,KAAL,CAAWC,YAAX,CAAwB0E,iBALrB;AAMVP,cAAAA,YAAY,EAAE,MAAKpE,KAAL,CAAWC,YAAX,CAAwB0E,iBAAxB,GAA4C;AANhD,aAAZ;AAQAhB,YAAAA,mBAAmB,GAAG;AACpBV,cAAAA,QAAQ,EAAE,MAAKjD,KAAL,CAAWC,YAAX,CAAwB2E,0BADd;AAEpBlC,cAAAA,KAAK,EAAE,MAAK1C,KAAL,CAAWC,YAAX,CAAwB4E;AAFX,aAAtB;AAIA;AACD;;AAED,aAAKxF,WAAW,CAACG,UAAjB;AAA6B;AAC3BkE,YAAAA,SAAS,GAAG;AACV3D,cAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwB6E,4BAD/B;AAEVf,cAAAA,WAAW,EAAE,MAAK/D,KAAL,CAAWC,YAAX,CAAwBwE,eAF3B;AAGVR,cAAAA,WAAW,EAAE,MAAKjE,KAAL,CAAWC,YAAX,CAAwB8E,yBAH3B;AAIVvE,cAAAA,MAAM,EAAE,MAAKR,KAAL,CAAWC,YAAX,CAAwB0E,iBAJtB;AAKVtE,cAAAA,KAAK,EAAE,MAAKL,KAAL,CAAWC,YAAX,CAAwB0E,iBALrB;AAMVP,cAAAA,YAAY,EAAE,MAAKpE,KAAL,CAAWC,YAAX,CAAwB0E,iBAAxB,GAA4C;AANhD,aAAZ;AAQAhB,YAAAA,mBAAmB,GAAG;AACpBqB,cAAAA,QAAQ,EAAE,QADU;AAEpB/B,cAAAA,QAAQ,EAAE,MAAKjD,KAAL,CAAWC,YAAX,CAAwB2E,0BAFd;AAGpBlC,cAAAA,KAAK,EAAE,MAAK1C,KAAL,CAAWC,YAAX,CAAwBgF;AAHX,aAAtB;AAKA;AACD;;AACD;AAjDF;;AAoDA,aACE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,GAAG,EAAE,gBAApB;AAAsC,QAAA,KAAK,EAAE,CAACpD,MAAM,CAACqD,IAAR,EAAcxB,SAAd,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,SACGlC,mBAAmB,GAClBA,mBAAmB,CAAC;AAClBrB,QAAAA,QAAQ,EAARA,QADkB;AAElB2C,QAAAA,UAAU,EAAE,MAAKC,aAAL,CAAmB5C,QAAnB;AAFM,OAAD,CADD,GAMlB,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEwD,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,eAAsCxD,QAAQ,GAAG,CAAjD,EAPJ,CADF;AAYD,KAlWmB;;AAAA,UAoWpB4C,aApWoB,GAoWJ,UAAAoC,YAAY,EAAI;AAAA,UACtBjE,eADsB,GACF,MAAKxB,KADH,CACtBwB,eADsB;;AAE9B,UAAIiE,YAAY,KAAKjE,eAArB,EAAsC;AACpC,eAAO7B,WAAW,CAACC,OAAnB;AACD,OAFD,MAEO,IAAI6F,YAAY,GAAGjE,eAAnB,EAAoC;AACzC,eAAO7B,WAAW,CAACE,QAAnB;AACD,OAFM,MAEA;AACL,eAAOF,WAAW,CAACG,UAAnB;AACD;AACF,KA7WmB;;AAAA,UA+WpByB,wBA/WoB,GA+WO,UAAAd,QAAQ,EAAI;AAAA,UAC/BP,SAD+B,GACjB,MAAKF,KADY,CAC/BE,SAD+B;;AAErC,UAAIO,QAAQ,GAAGP,SAAS,GAAG,CAA3B,EAA8B;AAC5BO,QAAAA,QAAQ,GAAGP,SAAS,GAAG,CAAvB;AACD;;AACD,UAAMwF,iBAAiB,GACpB,MAAKpF,KAAL,CAAWc,eAAX,IAA8BlB,SAAS,GAAG,CAA1C,CAAD,GAAiDO,QADnD;;AAEA,YAAKgE,QAAL,CAAckB,QAAd,CAAuB,MAAKrF,KAAL,CAAWC,YAAX,CAAwB0E,iBAA/C;;AACA,YAAKN,gBAAL,CAAsBgB,QAAtB,CACE,MAAKrF,KAAL,CAAWC,YAAX,CAAwB0E,iBAAxB,GAA4C,CAD9C;;AAGAW,MAAAA,QAAQ,CAACC,QAAT,CAAkB,CAChBD,QAAQ,CAACE,MAAT,CAAgB,MAAKjE,YAArB,EAAmC;AACjCkE,QAAAA,OAAO,EAAEL,iBADwB;AAEjCM,QAAAA,QAAQ,EAAE;AAFuB,OAAnC,CADgB,EAKhBJ,QAAQ,CAACK,QAAT,CAAkB,CAChBL,QAAQ,CAACE,MAAT,CAAgB,MAAKrB,QAArB,EAA+B;AAC7BsB,QAAAA,OAAO,EAAE,MAAKzF,KAAL,CAAWC,YAAX,CAAwBiC,wBADJ;AAE7BwD,QAAAA,QAAQ,EAAE;AAFmB,OAA/B,CADgB,EAKhBJ,QAAQ,CAACE,MAAT,CAAgB,MAAKnB,gBAArB,EAAuC;AACrCoB,QAAAA,OAAO,EAAE,MAAKzF,KAAL,CAAWC,YAAX,CAAwBiC,wBAAxB,GAAmD,CADvB;AAErCwD,QAAAA,QAAQ,EAAE;AAF2B,OAAvC,CALgB,CAAlB,CALgB,CAAlB,EAeGE,KAfH;AAgBD,KA1YmB;;AAGlB,QAAMC,aAAa,GAAG;AACpBlB,MAAAA,iBAAiB,EAAE,EADC;AAEpBzC,MAAAA,wBAAwB,EAAE,EAFN;AAGpB5B,MAAAA,oBAAoB,EAAE,CAHF;AAIpBI,MAAAA,8BAA8B,EAAE,CAJZ;AAKpBY,MAAAA,4BAA4B,EAAE,CALV;AAMpB0C,MAAAA,sBAAsB,EAAE,CANJ;AAOpBS,MAAAA,eAAe,EAAE,CAPG;AAQpBP,MAAAA,sBAAsB,EAAE,SARJ;AASpBQ,MAAAA,uBAAuB,EAAE,SATL;AAUpBK,MAAAA,yBAAyB,EAAE,SAVP;AAWpB1D,MAAAA,sBAAsB,EAAE,SAXJ;AAYpBnB,MAAAA,wBAAwB,EAAE,SAZN;AAapBsE,MAAAA,0BAA0B,EAAE,SAbR;AAcpBM,MAAAA,4BAA4B,EAAE,SAdV;AAepBhB,MAAAA,yBAAyB,EAAE,SAfP;AAgBpBc,MAAAA,0BAA0B,EAAE,EAhBR;AAiBpBN,MAAAA,iCAAiC,EAAE,EAjBf;AAkBpBC,MAAAA,8BAA8B,EAAE,SAlBZ;AAmBpBM,MAAAA,+BAA+B,EAAE,SAnBb;AAoBpBI,MAAAA,iCAAiC,EAAE,uBApBf;AAqBpBrC,MAAAA,UAAU,EAAE,SArBQ;AAsBpBM,MAAAA,SAAS,EAAE,EAtBS;AAuBpBO,MAAAA,UAAU,EAAE,QAvBQ;AAwBpBd,MAAAA,qBAAqB,EAAE;AAxBH,KAAtB;;AA0BA,QAAM1C,YAAY,GAAG,SAAc4F,aAAd,EAA6BnG,KAAK,CAACO,YAAnC,CAArB;;AAEA,UAAKD,KAAL,GAAa;AACXK,MAAAA,KAAK,EAAE,CADI;AAEXG,MAAAA,MAAM,EAAE,CAFG;AAGXM,MAAAA,eAAe,EAAE,CAHN;AAIXb,MAAAA,YAAY,EAAZA;AAJW,KAAb;AAOA,UAAKsB,YAAL,GAAoB,IAAI+D,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAApB;AACA,UAAK3B,QAAL,GAAgB,IAAImB,QAAQ,CAACQ,KAAb,CACd,MAAK9F,KAAL,CAAWC,YAAX,CAAwB0E,iBADV,CAAhB;AAGA,UAAKN,gBAAL,GAAwB,IAAIiB,QAAQ,CAACQ,KAAb,CACtB,MAAK9F,KAAL,CAAWC,YAAX,CAAwB0E,iBAAxB,GAA4C,CADtB,CAAxB;AA1CkB;AA6CnB;;;;gCAEYxE,Q,EAAU;AACrB,UAAI,KAAKT,KAAL,CAAWqG,OAAf,EAAwB;AACtB,aAAKrG,KAAL,CAAWqG,OAAX,CAAmB5F,QAAnB;AACD;AACF;;;6BAES;AAAA,yBACsB,KAAKT,KAD3B;AAAA,UACAgC,MADA,gBACAA,MADA;AAAA,UACQ7B,SADR,gBACQA,SADR;AAER,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACLgC,MAAM,CAACmE,SADF,EAELnG,SAAS,KAAK,UAAd,GACI;AAAEkC,UAAAA,aAAa,EAAE,KAAjB;AAAwBkE,UAAAA,IAAI,EAAE;AAA9B,SADJ,GAEI;AAAElE,UAAAA,aAAa,EAAE;AAAjB,SAJC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,KAAK/B,KAAL,CAAWK,KAAX,KAAqB,CAArB,IAA0B,KAAKV,2BAAL,EAR7B,EASG,KAAKK,KAAL,CAAWK,KAAX,KAAqB,CAArB,IAA0B,KAAKc,iBAAL,EAT7B,EAUG,KAAKK,mBAAL,EAVH,EAWGE,MAAM,IAAI,KAAKS,gBAAL,EAXb,CADF;AAeD;;;8CAE0B+D,S,EAAW;AACpC,UAAIA,SAAS,CAACjG,YAAV,KAA2B,KAAKP,KAAL,CAAWO,YAA1C,EAAwD;AACtD,aAAKY,QAAL,CAAc,UAAAb,KAAK;AAAA,iBAAK;AACtBC,YAAAA,YAAY,EAAE,SAAcD,KAAK,CAACC,YAApB,EAAkCiG,SAAS,CAACjG,YAA5C;AADQ,WAAL;AAAA,SAAnB;AAGD;;AACD,UAAIiG,SAAS,CAAChF,eAAV,KAA8B,KAAKxB,KAAL,CAAWwB,eAA7C,EAA8D;AAC5D,aAAKD,wBAAL,CAA8BiF,SAAS,CAAChF,eAAxC;AACD;AACF;;;;EAlFwC/B,S;;SAAtBM,a;AA8YrB,IAAMoC,MAAM,GAAGsE,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTjG,IAAAA,eAAe,EAAE;AADR,GADoB;AAI/BkC,EAAAA,sBAAsB,EAAE;AACtBF,IAAAA,aAAa,EAAE,KADO;AAEtByB,IAAAA,UAAU,EAAE,QAFU;AAGtB6C,IAAAA,cAAc,EAAE,cAHM;AAItBtG,IAAAA,eAAe,EAAE;AAJK,GAJO;AAU/BsD,EAAAA,mBAAmB,EAAE;AACnBgD,IAAAA,cAAc,EAAE;AADG,GAVU;AAa/BnB,EAAAA,IAAI,EAAE;AACJ1B,IAAAA,UAAU,EAAE,QADR;AAEJ6C,IAAAA,cAAc,EAAE,QAFZ;AAGJxC,IAAAA,MAAM,EAAE;AAHJ,GAbyB;AAkB/B/B,EAAAA,aAAa,EAAE;AACbmE,IAAAA,IAAI,EAAE,CADO;AAEblE,IAAAA,aAAa,EAAE,KAFF;AAGbyB,IAAAA,UAAU,EAAE,QAHC;AAIb6C,IAAAA,cAAc,EAAE;AAJH,GAlBgB;AAwB/BrD,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETqD,IAAAA,SAAS,EAAE,QAFF;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAxBoB;AA6B/B1D,EAAAA,aAAa,EAAE;AACboD,IAAAA,IAAI,EAAE,CADO;AAEbzC,IAAAA,UAAU,EAAE,QAFC;AAGb6C,IAAAA,cAAc,EAAE;AAHH;AA7BgB,CAAlB,CAAf;AAoCA5G,aAAa,CAAC+G,SAAd,GAA0B;AACxBtF,EAAAA,eAAe,EAAE9B,SAAS,CAACqH,MADH;AAExB7G,EAAAA,SAAS,EAAER,SAAS,CAACqH,MAFG;AAGxBxG,EAAAA,YAAY,EAAEb,SAAS,CAACsH,MAHA;AAIxB7G,EAAAA,SAAS,EAAET,SAAS,CAACuH,KAAV,CAAgB,CAAC,UAAD,EAAa,YAAb,CAAhB,CAJa;AAKxBjF,EAAAA,MAAM,EAAEtC,SAAS,CAACwH,KALM;AAMxBb,EAAAA,OAAO,EAAE3G,SAAS,CAACyH,IANK;AAOxBrF,EAAAA,mBAAmB,EAAEpC,SAAS,CAACyH,IAPP;AAQxBzE,EAAAA,WAAW,EAAEhD,SAAS,CAACyH;AARC,CAA1B;AAWApH,aAAa,CAACqH,YAAd,GAA6B;AAC3B5F,EAAAA,eAAe,EAAE,CADU;AAE3BtB,EAAAA,SAAS,EAAE,CAFgB;AAG3BK,EAAAA,YAAY,EAAE,EAHa;AAI3BJ,EAAAA,SAAS,EAAE;AAJgB,CAA7B","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback\n} from 'react-native'\n\nconst STEP_STATUS = {\n  CURRENT: 'current',\n  FINISHED: 'finished',\n  UNFINISHED: 'unfinished'\n}\n\nexport default class StepIndicator extends Component {\n  constructor (props) {\n    super(props)\n\n    const defaultStyles = {\n      stepIndicatorSize: 30,\n      currentStepIndicatorSize: 40,\n      separatorStrokeWidth: 3,\n      separatorStrokeUnfinishedWidth: 0,\n      separatorStrokeFinishedWidth: 0,\n      currentStepStrokeWidth: 5,\n      stepStrokeWidth: 0,\n      stepStrokeCurrentColor: '#4aae4f',\n      stepStrokeFinishedColor: '#4aae4f',\n      stepStrokeUnFinishedColor: '#4aae4f',\n      separatorFinishedColor: '#4aae4f',\n      separatorUnFinishedColor: '#a4d4a5',\n      stepIndicatorFinishedColor: '#4aae4f',\n      stepIndicatorUnFinishedColor: '#a4d4a5',\n      stepIndicatorCurrentColor: '#ffffff',\n      stepIndicatorLabelFontSize: 15,\n      currentStepIndicatorLabelFontSize: 15,\n      stepIndicatorLabelCurrentColor: '#000000',\n      stepIndicatorLabelFinishedColor: '#ffffff',\n      stepIndicatorLabelUnFinishedColor: 'rgba(255,255,255,0.5)',\n      labelColor: '#000000',\n      labelSize: 13,\n      labelAlign: 'center',\n      currentStepLabelColor: '#4aae4f'\n    }\n    const customStyles = Object.assign(defaultStyles, props.customStyles)\n\n    this.state = {\n      width: 0,\n      height: 0,\n      progressBarSize: 0,\n      customStyles\n    }\n\n    this.progressAnim = new Animated.Value(0)\n    this.sizeAnim = new Animated.Value(\n      this.state.customStyles.stepIndicatorSize\n    )\n    this.borderRadiusAnim = new Animated.Value(\n      this.state.customStyles.stepIndicatorSize / 2\n    )\n  }\n\n  stepPressed (position) {\n    if (this.props.onPress) {\n      this.props.onPress(position)\n    }\n  }\n\n  render () {\n    const { labels, direction } = this.props\n    return (\n      <View\n        style={[\n          styles.container,\n          direction === 'vertical'\n            ? { flexDirection: 'row', flex: 1 }\n            : { flexDirection: 'column' }\n        ]}\n      >\n        {this.state.width !== 0 && this.renderProgressBarBackground()}\n        {this.state.width !== 0 && this.renderProgressBar()}\n        {this.renderStepIndicator()}\n        {labels && this.renderStepLabels()}\n      </View>\n    )\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.customStyles !== this.props.customStyles) {\n      this.setState(state => ({\n        customStyles: Object.assign(state.customStyles, nextProps.customStyles)\n      }))\n    }\n    if (nextProps.currentPosition !== this.props.currentPosition) {\n      this.onCurrentPositionChanged(nextProps.currentPosition)\n    }\n  }\n\n  renderProgressBarBackground = () => {\n    const { stepCount, direction } = this.props\n    let progressBarBackgroundStyle\n    if (direction === 'vertical') {\n      progressBarBackgroundStyle = {\n        backgroundColor: this.state.customStyles.separatorUnFinishedColor,\n        position: 'absolute',\n        left:\n          (this.state.width - this.state.customStyles.separatorStrokeWidth) / 2,\n        top: this.state.height / (2 * stepCount),\n        bottom: this.state.height / (2 * stepCount),\n        width:\n          this.state.customStyles.separatorStrokeUnfinishedWidth == 0\n            ? this.state.customStyles.separatorStrokeWidth\n            : this.state.customStyles.separatorStrokeUnfinishedWidth\n      }\n    } else {\n      progressBarBackgroundStyle = {\n        backgroundColor: this.state.customStyles.separatorUnFinishedColor,\n        position: 'absolute',\n        top:\n          (this.state.height - this.state.customStyles.separatorStrokeWidth) /\n          2,\n        left: this.state.width / (2 * stepCount),\n        right: this.state.width / (2 * stepCount),\n        height:\n          this.state.customStyles.separatorStrokeUnfinishedWidth == 0\n            ? this.state.customStyles.separatorStrokeWidth\n            : this.state.customStyles.separatorStrokeUnfinishedWidth\n      }\n    }\n    return (\n      <View\n        onLayout={event => {\n          if (direction === 'vertical') {\n            this.setState(\n              { progressBarSize: event.nativeEvent.layout.height },\n              () => {\n                this.onCurrentPositionChanged(this.props.currentPosition)\n              }\n            )\n          } else {\n            this.setState(\n              { progressBarSize: event.nativeEvent.layout.width },\n              () => {\n                this.onCurrentPositionChanged(this.props.currentPosition)\n              }\n            )\n          }\n        }}\n        style={progressBarBackgroundStyle}\n      />\n    )\n  }\n\n  renderProgressBar = () => {\n    const { stepCount, direction } = this.props\n    let progressBarStyle\n    if (direction === 'vertical') {\n      progressBarStyle = {\n        backgroundColor: this.state.customStyles.separatorFinishedColor,\n        position: 'absolute',\n        left:\n          (this.state.width - this.state.customStyles.separatorStrokeWidth) / 2,\n        top: this.state.height / (2 * stepCount),\n        bottom: this.state.height / (2 * stepCount),\n        width:\n          this.state.customStyles.separatorStrokeFinishedWidth == 0\n            ? this.state.customStyles.separatorStrokeWidth\n            : this.state.customStyles.separatorStrokeFinishedWidth,\n        height: this.progressAnim\n      }\n    } else {\n      progressBarStyle = {\n        backgroundColor: this.state.customStyles.separatorFinishedColor,\n        position: 'absolute',\n        top:\n          (this.state.height - this.state.customStyles.separatorStrokeWidth) /\n          2,\n        left: this.state.width / (2 * stepCount),\n        right: this.state.width / (2 * stepCount),\n        height:\n          this.state.customStyles.separatorStrokeFinishedWidth == 0\n            ? this.state.customStyles.separatorStrokeWidth\n            : this.state.customStyles.separatorStrokeFinishedWidth,\n        width: this.progressAnim\n      }\n    }\n    return <Animated.View style={progressBarStyle} />\n  }\n\n  renderStepIndicator = () => {\n    let steps = []\n    const { labels, stepCount, direction } = this.props\n    for (let position = 0; position < stepCount; position++) {\n      steps.push(\n        <TouchableWithoutFeedback\n          key={position}\n          onPress={() => this.stepPressed(position)}\n        >\n          <View\n            style={[\n              styles.stepContainer,\n              direction === 'vertical'\n                ? { flexDirection: 'column' }\n                : { flexDirection: 'row' }\n            ]}\n          >\n            {this.renderStep(position)}\n          </View>\n        </TouchableWithoutFeedback>\n      )\n    }\n    return (\n      <View\n        onLayout={event =>\n          this.setState({\n            width: event.nativeEvent.layout.width,\n            height: event.nativeEvent.layout.height\n          })\n        }\n        style={[\n          styles.stepIndicatorContainer,\n          direction === 'vertical'\n            ? {\n              flexDirection: 'column',\n              width: this.state.customStyles.currentStepIndicatorSize\n            }\n            : {\n              flexDirection: 'row',\n              height: this.state.customStyles.currentStepIndicatorSize\n            }\n        ]}\n      >\n        {steps}\n      </View>\n    )\n  }\n\n  renderStepLabels = () => {\n    const { labels, direction, currentPosition, renderLabel } = this.props\n    var labelViews = labels.map((label, index) => {\n      const selectedStepLabelStyle =\n        index === currentPosition\n          ? { color: this.state.customStyles.currentStepLabelColor }\n          : { color: this.state.customStyles.labelColor }\n      return (\n        <TouchableWithoutFeedback\n          style={styles.stepLabelItem}\n          key={index}\n          onPress={() => this.stepPressed(index)}\n        >\n          <View style={styles.stepLabelItem}>\n            {renderLabel ? (\n              renderLabel({\n                position: index,\n                stepStatus: this.getStepStatus(index),\n                label,\n                currentPosition\n              })\n            ) : (\n              <Text\n                style={[\n                  styles.stepLabel,\n                  selectedStepLabelStyle,\n                  {\n                    fontSize: this.state.customStyles.labelSize,\n                    fontFamily: this.state.customStyles.labelFontFamily\n                  }\n                ]}\n              >\n                {label}\n              </Text>\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      )\n    })\n\n    return (\n      <View\n        style={[\n          styles.stepLabelsContainer,\n          direction === 'vertical'\n            ? { flexDirection: 'column', paddingHorizontal: 4 }\n            : { flexDirection: 'row', paddingVertical: 4 },\n          { alignItems: this.state.customStyles.labelAlign }\n        ]}\n      >\n        {labelViews}\n      </View>\n    )\n  }\n\n  renderStep = position => {\n    const {\n      currentPosition,\n      stepCount,\n      direction,\n      renderStepIndicator\n    } = this.props\n    let stepStyle\n    let indicatorLabelStyle\n    const separatorStyle =\n      direction === 'vertical'\n        ? { width: this.state.customStyles.separatorStrokeWidth, zIndex: 10 }\n        : { height: this.state.customStyles.separatorStrokeWidth }\n    switch (this.getStepStatus(position)) {\n      case STEP_STATUS.CURRENT: {\n        stepStyle = {\n          backgroundColor: this.state.customStyles.stepIndicatorCurrentColor,\n          borderWidth: this.state.customStyles.currentStepStrokeWidth,\n          borderColor: this.state.customStyles.stepStrokeCurrentColor,\n          height: this.sizeAnim,\n          width: this.sizeAnim,\n          borderRadius: this.borderRadiusAnim\n        }\n        indicatorLabelStyle = {\n          fontSize: this.state.customStyles.currentStepIndicatorLabelFontSize,\n          color: this.state.customStyles.stepIndicatorLabelCurrentColor\n        }\n\n        break\n      }\n      case STEP_STATUS.FINISHED: {\n        stepStyle = {\n          backgroundColor: this.state.customStyles.stepIndicatorFinishedColor,\n          borderWidth: this.state.customStyles.stepStrokeWidth,\n          borderColor: this.state.customStyles.stepStrokeFinishedColor,\n          height: this.state.customStyles.stepIndicatorSize,\n          width: this.state.customStyles.stepIndicatorSize,\n          borderRadius: this.state.customStyles.stepIndicatorSize / 2\n        }\n        indicatorLabelStyle = {\n          fontSize: this.state.customStyles.stepIndicatorLabelFontSize,\n          color: this.state.customStyles.stepIndicatorLabelFinishedColor\n        }\n        break\n      }\n\n      case STEP_STATUS.UNFINISHED: {\n        stepStyle = {\n          backgroundColor: this.state.customStyles.stepIndicatorUnFinishedColor,\n          borderWidth: this.state.customStyles.stepStrokeWidth,\n          borderColor: this.state.customStyles.stepStrokeUnFinishedColor,\n          height: this.state.customStyles.stepIndicatorSize,\n          width: this.state.customStyles.stepIndicatorSize,\n          borderRadius: this.state.customStyles.stepIndicatorSize / 2\n        }\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: this.state.customStyles.stepIndicatorLabelFontSize,\n          color: this.state.customStyles.stepIndicatorLabelUnFinishedColor\n        }\n        break\n      }\n      default:\n    }\n\n    return (\n      <Animated.View key={'step-indicator'} style={[styles.step, stepStyle]}>\n        {renderStepIndicator ? (\n          renderStepIndicator({\n            position,\n            stepStatus: this.getStepStatus(position)\n          })\n        ) : (\n          <Text style={indicatorLabelStyle}>{`${position + 1}`}</Text>\n        )}\n      </Animated.View>\n    )\n  }\n\n  getStepStatus = stepPosition => {\n    const { currentPosition } = this.props\n    if (stepPosition === currentPosition) {\n      return STEP_STATUS.CURRENT\n    } else if (stepPosition < currentPosition) {\n      return STEP_STATUS.FINISHED\n    } else {\n      return STEP_STATUS.UNFINISHED\n    }\n  }\n\n  onCurrentPositionChanged = position => {\n    let { stepCount } = this.props\n    if (position > stepCount - 1) {\n      position = stepCount - 1\n    }\n    const animateToPosition =\n      (this.state.progressBarSize / (stepCount - 1)) * position\n    this.sizeAnim.setValue(this.state.customStyles.stepIndicatorSize)\n    this.borderRadiusAnim.setValue(\n      this.state.customStyles.stepIndicatorSize / 2\n    )\n    Animated.sequence([\n      Animated.timing(this.progressAnim, {\n        toValue: animateToPosition,\n        duration: 200\n      }),\n      Animated.parallel([\n        Animated.timing(this.sizeAnim, {\n          toValue: this.state.customStyles.currentStepIndicatorSize,\n          duration: 100\n        }),\n        Animated.timing(this.borderRadiusAnim, {\n          toValue: this.state.customStyles.currentStepIndicatorSize / 2,\n          duration: 100\n        })\n      ])\n    ]).start()\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent'\n  },\n  stepIndicatorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    backgroundColor: 'transparent'\n  },\n  stepLabelsContainer: {\n    justifyContent: 'space-around'\n  },\n  step: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2\n  },\n  stepContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  stepLabel: {\n    fontSize: 12,\n    textAlign: 'center',\n    fontWeight: '500'\n  },\n  stepLabelItem: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n\nStepIndicator.propTypes = {\n  currentPosition: PropTypes.number,\n  stepCount: PropTypes.number,\n  customStyles: PropTypes.object,\n  direction: PropTypes.oneOf(['vertical', 'horizontal']),\n  labels: PropTypes.array,\n  onPress: PropTypes.func,\n  renderStepIndicator: PropTypes.func,\n  renderLabel: PropTypes.func\n}\n\nStepIndicator.defaultProps = {\n  currentPosition: 0,\n  stepCount: 5,\n  customStyles: {},\n  direction: 'horizontal'\n}\n"]},"metadata":{},"sourceType":"module"}