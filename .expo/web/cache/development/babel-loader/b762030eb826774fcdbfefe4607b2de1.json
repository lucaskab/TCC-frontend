{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\tcc\\\\frontend\\\\src\\\\components\\\\AlterarCadastro.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { connect } from 'react-redux';\nimport { Header } from 'react-native-elements';\nimport { Actions } from 'react-native-router-flux';\nimport * as Font from 'expo-font';\nimport api from \"../../services/api\";\nimport { modificaAlteraNome, modificaAlteraData, modificaAlteraEndereco, modificaAlteraNumero, modificaAlteraCidade, modificaAlteraCEP, modificaAlteraUF, modificaAlteraTelefone, modificaAlteraCelular, modificaAlteraRG, modificaAlteraEmail, modificaAlteraSenha } from \"../actions/AlteraCadastroActions\";\nexport var AlterarCadastro = function AlterarCadastro(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Usuario = _useState4[0],\n      setUsuario = _useState4[1];\n\n  function AlteraDados() {\n    var id, nome, dataNascimento, endereco, numero, cidade, cep, uf, telefone, celular, rg, email, resposta;\n    return _regeneratorRuntime.async(function AlteraDados$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = Usuario._id;\n            nome = props.nome, dataNascimento = props.dataNascimento, endereco = props.endereco, numero = props.numero, cidade = props.cidade, cep = props.cep, uf = props.uf, telefone = props.telefone, celular = props.celular, rg = props.rg;\n            email = props.email1;\n\n            if (nome == \"\") {\n              nome = (_readOnlyError(\"nome\"), Usuario.nome);\n            }\n\n            if (dataNascimento == \"\") {\n              dataNascimento = (_readOnlyError(\"dataNascimento\"), Usuario.dataNascimento);\n            }\n\n            if (endereco == \"\") {\n              endereco = (_readOnlyError(\"endereco\"), Usuario.endereco);\n            }\n\n            if (numero == \"\") {\n              numero = (_readOnlyError(\"numero\"), Usuario.numero);\n            }\n\n            if (cidade == \"\") {\n              cidade = (_readOnlyError(\"cidade\"), Usuario.cidade);\n            }\n\n            if (cep == \"\") {\n              cep = (_readOnlyError(\"cep\"), Usuario.cep);\n            }\n\n            if (uf == \"\") {\n              uf = (_readOnlyError(\"uf\"), Usuario.uf);\n            }\n\n            if (telefone == \"\") {\n              telefone = (_readOnlyError(\"telefone\"), Usuario.telefone);\n            }\n\n            if (celular == \"\") {\n              celular = (_readOnlyError(\"celular\"), Usuario.celular);\n            }\n\n            if (rg == \"\") {\n              rg = (_readOnlyError(\"rg\"), Usuario.rg);\n            }\n\n            if (email == \"\") {\n              email = Usuario.email;\n            }\n\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(api.post('/AlteraDadosUsuario', {\n              id: id,\n              nome: nome,\n              dataNascimento: dataNascimento,\n              endereco: endereco,\n              numero: numero,\n              cidade: cidade,\n              cep: cep,\n              uf: uf,\n              telefone: telefone,\n              celular: celular,\n              rg: rg,\n              email: email\n            }));\n\n          case 16:\n            resposta = _context.sent;\n            Actions.navigation();\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function fetchFonts() {\n    var retorno, email, resposta;\n    return _regeneratorRuntime.async(function fetchFonts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              'adventpro-regular': require(\"../../assets/fonts/adventpro-regular.ttf\"),\n              'Roboto-Regular': require(\"../../assets/fonts/Roboto-Regular.ttf\"),\n              'Roboto-Medium': require(\"../../assets/fonts/Roboto-Medium.ttf\")\n            }));\n\n          case 2:\n            retorno = _context2.sent;\n            email = props.email;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(api.post('/userscadastrados', {\n              email: email\n            }));\n\n          case 6:\n            resposta = _context2.sent;\n            setUsuario(resposta.data);\n            setDataLoaded(true);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    fetchFonts();\n  }, []);\n  return React.createElement(React.Fragment, null, dataLoaded ? React.createElement(React.Fragment, null, React.createElement(Header, {\n    containerStyle: {\n      backgroundColor: '#8a2be2'\n    },\n    leftComponent: {\n      icon: 'arrow-back',\n      color: '#fff',\n      onPress: function onPress() {\n        return Actions.navigation();\n      },\n      size: 35\n    },\n    centerComponent: {\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    }\n  }), React.createElement(ImageBackground, {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    source: require(\"../imgs/telafundo2.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    }\n  }, React.createElement(View, {\n    showsVerticalScrollIndicator: true,\n    style: styles.viewItens,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    }\n  }, React.createElement(Text, {\n    style: styles.alteracaoDePerfil,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    }\n  }, \"Altera\\xE7\\xE3o de Perfil\"), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    }\n  }, \"Nome:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.nome,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.nome,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraNome(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    }\n  }, \"Data de Nascimento:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.dataNascimento,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.dataNascimento,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraData(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    }\n  }, \"Endere\\xE7o:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.endereco,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.endereco,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraEndereco(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    }\n  }, \"N\\xFAmero:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.numero,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.numero,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraNumero(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    }\n  }, \"Cidade:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.cidade,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.cidade,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraCidade(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    }\n  }, \"CEP:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.cep,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.cep,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraCEP(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    }\n  }, \"UF:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.uf,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.uf,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraUF(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    }\n  }, \"Telefone:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.telefone,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.telefone,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraTelefone(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    }\n  }, \"Celular:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.celular,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.celular,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraCelular(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    }\n  }, \"RG:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.rg,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.rg,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraRG(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    }\n  }), React.createElement(Text, {\n    style: styles.texts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    }\n  }, \"Email:\"), React.createElement(TextInput, {\n    placeholderTextColor: \"black\",\n    placeholder: Usuario.email,\n    style: styles.inputs,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: props.email1,\n    onChangeText: function onChangeText(texto) {\n      return props.modificaAlteraEmail(texto);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.botao,\n    onPress: function onPress() {\n      return AlteraDados();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    }\n  }, React.createElement(Text, {\n    style: styles.textbotao,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    }\n  }, \"Alterar\")))))) : null);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    nome: state.AlteraCadastroReducer.nomeAlteraCadastro,\n    dataNascimento: state.AlteraCadastroReducer.dataAlteraNascCadastro,\n    endereco: state.AlteraCadastroReducer.enderecoAlteraCadastro,\n    numero: state.AlteraCadastroReducer.numeroAlteraCadastro,\n    cidade: state.AlteraCadastroReducer.cidadeAlteraCadastro,\n    cep: state.AlteraCadastroReducer.CEPAlteraCadastro,\n    uf: state.AlteraCadastroReducer.UFAlteraCadastro,\n    telefone: state.AlteraCadastroReducer.telefoneAlteraCadastro,\n    celular: state.AlteraCadastroReducer.celularAlteraCadastro,\n    rg: state.AlteraCadastroReducer.RGAlteraCadastro,\n    email1: state.AlteraCadastroReducer.emailAlteraCadastro,\n    email: state.AutenticacaoReducer.emailLogin\n  };\n};\n\nexport default connect(mapStateToProps, {\n  modificaAlteraNome: modificaAlteraNome,\n  modificaAlteraData: modificaAlteraData,\n  modificaAlteraEndereco: modificaAlteraEndereco,\n  modificaAlteraNumero: modificaAlteraNumero,\n  modificaAlteraCidade: modificaAlteraCidade,\n  modificaAlteraCEP: modificaAlteraCEP,\n  modificaAlteraUF: modificaAlteraUF,\n  modificaAlteraTelefone: modificaAlteraTelefone,\n  modificaAlteraCelular: modificaAlteraCelular,\n  modificaAlteraRG: modificaAlteraRG,\n  modificaAlteraEmail: modificaAlteraEmail,\n  modificaAlteraSenha: modificaAlteraSenha\n})(AlterarCadastro);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  viewItens: {\n    width: 280,\n    alignSelf: 'center'\n  },\n  alteracaoDePerfil: {\n    color: \"#121212\",\n    fontSize: 39,\n    fontFamily: 'Roboto-Regular',\n    marginTop: 30,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  inputs: {\n    width: 245,\n    height: 40,\n    backgroundColor: \"rgba(193,196,239,1)\",\n    marginTop: 5,\n    alignSelf: 'center',\n    fontSize: 20,\n    fontFamily: 'Roboto-Regular',\n    paddingHorizontal: 10\n  },\n  texts: {\n    color: \"#121212\",\n    fontSize: 20,\n    fontFamily: 'Roboto-Regular',\n    marginTop: 5,\n    marginLeft: 17.5\n  },\n  textbotao: {\n    color: \"#121212\",\n    fontSize: 40,\n    fontFamily: 'Roboto-Regular'\n  },\n  botao: {\n    width: 244,\n    height: 88,\n    marginTop: 20,\n    marginBottom: 90,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: \"center\",\n    backgroundColor: \"#673AB7\",\n    elevation: 2,\n    borderRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 0\n    },\n    shadowColor: \"#000\",\n    shadowOpacity: 0.35,\n    shadowRadius: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Lucas/tcc/frontend/src/components/AlterarCadastro.js"],"names":["React","useState","useEffect","connect","Header","Actions","Font","api","modificaAlteraNome","modificaAlteraData","modificaAlteraEndereco","modificaAlteraNumero","modificaAlteraCidade","modificaAlteraCEP","modificaAlteraUF","modificaAlteraTelefone","modificaAlteraCelular","modificaAlteraRG","modificaAlteraEmail","modificaAlteraSenha","AlterarCadastro","props","dataLoaded","setDataLoaded","Usuario","setUsuario","AlteraDados","id","_id","nome","dataNascimento","endereco","numero","cidade","cep","uf","telefone","celular","rg","email","email1","post","resposta","navigation","fetchFonts","loadAsync","require","retorno","data","backgroundColor","icon","color","onPress","size","Keyboard","dismiss","width","height","styles","container","viewItens","alteracaoDePerfil","texts","inputs","texto","botao","textbotao","mapStateToProps","state","AlteraCadastroReducer","nomeAlteraCadastro","dataAlteraNascCadastro","enderecoAlteraCadastro","numeroAlteraCadastro","cidadeAlteraCadastro","CEPAlteraCadastro","UFAlteraCadastro","telefoneAlteraCadastro","celularAlteraCadastro","RGAlteraCadastro","emailAlteraCadastro","AutenticacaoReducer","emailLogin","StyleSheet","create","flex","alignSelf","fontSize","fontFamily","marginTop","marginBottom","textAlign","paddingHorizontal","marginLeft","alignItems","justifyContent","elevation","borderRadius","shadowOffset","shadowColor","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { ScrollView, StyleSheet, View, TextInput, TouchableOpacity, Text, ImageBackground} from 'react-native';\n\nimport { connect } from 'react-redux';\nimport {Header } from 'react-native-elements';\nimport { Actions } from 'react-native-router-flux';\nimport * as Font from 'expo-font';\nimport api from '../../services/api';\nimport {modificaAlteraNome, modificaAlteraData, modificaAlteraEndereco,\n  modificaAlteraNumero, modificaAlteraCidade, modificaAlteraCEP, modificaAlteraUF, modificaAlteraTelefone,\n  modificaAlteraCelular, modificaAlteraRG, modificaAlteraEmail, modificaAlteraSenha} from '../actions/AlteraCadastroActions'\n\n\nexport const AlterarCadastro = (props) =>  {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [Usuario, setUsuario] = useState(null);\n\n    async function AlteraDados() {\n\n      const id = Usuario._id;\n      const { nome, dataNascimento, endereco, numero, cidade, cep, uf, telefone, celular, rg } = props    \n        var email = props.email1;\n\n      if(nome == \"\"){\n        nome = Usuario.nome;\n      }\n      if(dataNascimento == \"\"){\n        dataNascimento = Usuario.dataNascimento;\n      }\n      if(endereco == \"\"){\n        endereco = Usuario.endereco;\n      }\n      if(numero == \"\"){\n        numero = Usuario.numero;\n      }\n      if(cidade == \"\"){\n        cidade = Usuario.cidade;\n      }\n      if(cep == \"\"){\n        cep = Usuario.cep;\n      }\n      if(uf == \"\"){\n        uf = Usuario.uf;\n      }\n      if(telefone == \"\"){\n        telefone = Usuario.telefone;\n      }\n      if(celular == \"\"){\n        celular = Usuario.celular;\n      }\n      if(rg == \"\"){\n        rg = Usuario.rg;\n      }\n      if(email == \"\"){\n        email = Usuario.email;\n      }\n\n      const resposta = await api.post('/AlteraDadosUsuario',\n      { id, nome, dataNascimento, endereco, numero, cidade, cep, uf, telefone, celular, rg, email})\n\n      Actions.navigation();\n\n      \n    }\n\n    async function fetchFonts () {\n        const retorno = await Font.loadAsync({\n          'adventpro-regular': require('../../assets/fonts/adventpro-regular.ttf'),\n          'Roboto-Regular': require('../../assets/fonts/Roboto-Regular.ttf'),\n          'Roboto-Medium': require('../../assets/fonts/Roboto-Medium.ttf')\n\n          })\n        var email = props.email\n        const resposta = await api.post('/userscadastrados', {email}) \n        setUsuario(resposta.data);\n       setDataLoaded(true);  \n      }\n\n    useEffect(() => {\n      fetchFonts();\n        },[])\n\n    return (\n        <>\n        {\n        dataLoaded ? (\n        <>\n        \n        <Header\n        containerStyle={{ backgroundColor: '#8a2be2' }}\n        leftComponent={{ icon: 'arrow-back', color: '#fff', onPress:() => Actions.navigation(), size: 35  }}\n        centerComponent={{ onPress:() => Keyboard.dismiss()  }}\n        />\n      <ImageBackground style={{ width: '100%', height: '100%'}} source={require('../imgs/telafundo2.jpg')}>\n      <ScrollView  style={styles.container}>\n     \n        <View showsVerticalScrollIndicator={true} style={styles.viewItens}>     \n            \n            <Text style={styles.alteracaoDePerfil}>Alteração de Perfil</Text>\n              \n                     <Text style={styles.texts}>Nome:</Text>\n\n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.nome} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.nome}\n                     onChangeText={texto => props.modificaAlteraNome(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>Data de Nascimento:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.dataNascimento} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.dataNascimento}\n                     onChangeText={texto => props.modificaAlteraData(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>Endereço:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.endereco} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.endereco}\n                     onChangeText={texto => props.modificaAlteraEndereco(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>Número:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.numero} \n                     style={styles.inputs} \n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.numero}\n                     onChangeText={texto => props.modificaAlteraNumero(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>Cidade:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.cidade} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.cidade}\n                     onChangeText={texto => props.modificaAlteraCidade(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>CEP:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black'\n                     placeholder= {Usuario.cep} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.cep}\n                     onChangeText={texto => props.modificaAlteraCEP(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>UF:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.uf} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.uf}\n                     onChangeText={texto => props.modificaAlteraUF(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>Telefone:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.telefone} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.telefone}\n                     onChangeText={texto => props.modificaAlteraTelefone(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>Celular:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.celular} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.celular}\n                     onChangeText={texto => props.modificaAlteraCelular(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>RG:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black'\n                     placeholder= {Usuario.rg} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.rg}\n                     onChangeText={texto => props.modificaAlteraRG(texto)}\n                     ></TextInput>\n         \n                     <Text style={styles.texts}>Email:</Text>\n         \n                     <TextInput \n                     placeholderTextColor='black' \n                     placeholder= {Usuario.email} \n                     style={styles.inputs}\n                     autoCapitalize=\"words\"\n                     autoCorrect={false}\n                     value={props.email1}\n                     onChangeText={texto => props.modificaAlteraEmail(texto)}\n                     ></TextInput>\n\n            <TouchableOpacity style={styles.botao} onPress={() => AlteraDados()}>\n                <Text style={styles.textbotao}>Alterar</Text>\n            </TouchableOpacity> \n        </View> \n    </ScrollView>\n    </ImageBackground> \n    </>\n    ) : null}\n    </>\n    )\n};\n\nconst mapStateToProps = state =>(\n    {\n      nome: state.AlteraCadastroReducer.nomeAlteraCadastro,\n      dataNascimento: state.AlteraCadastroReducer.dataAlteraNascCadastro,\n      endereco: state.AlteraCadastroReducer.enderecoAlteraCadastro,\n      numero: state.AlteraCadastroReducer.numeroAlteraCadastro,\n      cidade: state.AlteraCadastroReducer.cidadeAlteraCadastro,\n      cep: state.AlteraCadastroReducer.CEPAlteraCadastro,\n      uf: state.AlteraCadastroReducer.UFAlteraCadastro,\n      telefone: state.AlteraCadastroReducer.telefoneAlteraCadastro,\n      celular: state.AlteraCadastroReducer.celularAlteraCadastro,\n      rg: state.AlteraCadastroReducer.RGAlteraCadastro,\n      email1: state.AlteraCadastroReducer.emailAlteraCadastro,\n    \n      email: state.AutenticacaoReducer.emailLogin\n    }\n    \n  )\n  \n  export default connect(mapStateToProps, {modificaAlteraNome, modificaAlteraData, modificaAlteraEndereco,\n    modificaAlteraNumero, modificaAlteraCidade, modificaAlteraCEP, modificaAlteraUF, modificaAlteraTelefone,\n    modificaAlteraCelular, modificaAlteraRG, modificaAlteraEmail, modificaAlteraSenha})(AlterarCadastro);\n\n  const styles = StyleSheet.create({\n    container: {\n        flex:1,   \n    },\n    viewItens: {\n        width: 280,\n        alignSelf: 'center'\n    },\n    alteracaoDePerfil: {\n        color: \"#121212\",\n        fontSize: 39,\n        fontFamily: 'Roboto-Regular',\n        marginTop: 30,\n        marginBottom: 20,\n        textAlign: 'center'\n      },\n      inputs: {\n        width: 245,\n        height: 40,\n        backgroundColor: \"rgba(193,196,239,1)\",\n        marginTop: 5,\n        alignSelf: 'center',\n        fontSize: 20,\n        fontFamily: 'Roboto-Regular',\n        paddingHorizontal: 10\n      },\n      texts: {\n        color: \"#121212\",\n        fontSize: 20,\n        fontFamily: 'Roboto-Regular',\n        marginTop: 5,\n        marginLeft: 17.5\n      },\n      textbotao: {\n        color: \"#121212\",\n        fontSize: 40,\n        fontFamily: 'Roboto-Regular',\n      },\n      botao: {\n        width: 244,\n        height: 88,\n        marginTop: 20,\n        marginBottom: 90,\n        alignSelf: 'center',\n        alignItems: 'center',\n        justifyContent: \"center\",\n        backgroundColor: \"#673AB7\",\n        elevation: 2,\n        borderRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 0\n    },\n    shadowColor: \"#000\",\n    shadowOpacity: 0.35,\n    shadowRadius: 5\n      }\n    \n  });"]},"metadata":{},"sourceType":"module"}